<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='WorldUniversityRanking' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='timesData' inline='true' name='federated.1nia1jd08pg31b1duuwl70l0f3xc' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='timesData' name='textscan.0kfjlrm0ohh6ty0zmhphv06mshfq'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='timesData.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='timesDataclean1' name='textscan.1gnd9mi138y1ss11xe8sc08r2nxv'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='timesDataclean1.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='timesDataclean2' name='textscan.0gokwto1yci2q41ck0tfa1tvtnul'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='timesDataclean2.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='timesDataclean3' name='textscan.00jt7200lqrbjn16x04lz0a4mhj5'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='timesDataclean3.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='timesDataclean3 (2)' name='textscan.0tdpv6l0c2sllc1fzco3d0le5ola'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='timesDataclean3.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0gokwto1yci2q41ck0tfa1tvtnul' name='timesDataclean2.csv' table='[timesDataclean2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='world_rank' ordinal='0' />
            <column datatype='string' name='university_name' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='real' name='teaching' ordinal='3' />
            <column datatype='real' name='international' ordinal='4' />
            <column datatype='real' name='research' ordinal='5' />
            <column datatype='real' name='citations' ordinal='6' />
            <column datatype='real' name='income' ordinal='7' />
            <column datatype='real' name='total_score' ordinal='8' />
            <column datatype='integer' name='num_students' ordinal='9' />
            <column datatype='real' name='student_staff_ratio' ordinal='10' />
            <column datatype='real' name='international_students' ordinal='11' />
            <column datatype='datetime' date-parse-format='yyyy' name='year' ordinal='12' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>world_rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[world_rank]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>world_rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>university_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[university_name]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>university_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teaching</remote-name>
            <remote-type>5</remote-type>
            <local-name>[teaching]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>teaching</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>international</remote-name>
            <remote-type>5</remote-type>
            <local-name>[international]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>international</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>research</remote-name>
            <remote-type>5</remote-type>
            <local-name>[research]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>research</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>citations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[citations]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>citations</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_score]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>total_score</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_students</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_students]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>num_students</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>student_staff_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[student_staff_ratio]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>student_staff_ratio</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>international_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[international_students]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>international_students</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[timesDataclean2.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Citations' datatype='real' name='[citations]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
      <column caption='International' datatype='real' name='[international]' role='measure' type='quantitative' />
      <column caption='International Students' datatype='real' name='[international_students]' role='measure' type='quantitative' />
      <column caption='Num Students' datatype='integer' name='[num_students]' role='measure' type='quantitative' />
      <column caption='Research' datatype='real' name='[research]' role='measure' type='quantitative' />
      <column caption='Student Staff Ratio' datatype='real' name='[student_staff_ratio]' role='measure' type='quantitative' />
      <column caption='Teaching' datatype='real' name='[teaching]' role='measure' type='quantitative' />
      <column caption='Total Score' datatype='real' name='[total_score]' role='measure' type='quantitative' />
      <column caption='University Name' datatype='string' name='[university_name]' role='dimension' type='nominal' />
      <column caption='World Rank' datatype='integer' name='[world_rank]' role='measure' type='quantitative' />
      <column caption='Year' datatype='datetime' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[university_name]' derivation='None' name='[none:university_name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/rajpu/AppData/Local/Temp/TableauTemp/TEMP_04xe4zb0xi3yn711wfwdp17zt4ed.tde' schema='Extract' tablename='Extract' update-time='05/07/2017 01:46:24 AM' updated-database='C:/Users/rajpu/Documents/My Tableau Repository/Datasources/timesData.tde'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='54' timestamp-start='2017-05-07 01:46:24.581' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>54.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>54.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>citations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[citations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>citations</remote-alias>
              <ordinal>1</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5288.1999999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>97.92962962962963</statistic>
                <statistic aggregation='Min' datatype='real'>88.299999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.8450970490877912</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.8186304547782535</statistic>
                <statistic aggregation='Var' datatype='real'>8.0945772187280571</statistic>
                <statistic aggregation='VarP' datatype='real'>7.944677640603464</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>518300.47999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>2</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United Kingdom&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States of America&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>income</remote-name>
              <remote-type>5</remote-type>
              <local-name>[income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>income</remote-alias>
              <ordinal>3</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3787.1000000000004</statistic>
                <statistic aggregation='Avg' datatype='real'>70.131481481481487</statistic>
                <statistic aggregation='Min' datatype='real'>34.5</statistic>
                <statistic aggregation='Max' datatype='real'>97.799999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>18.460818519375241</statistic>
                <statistic aggregation='StdevP' datatype='real'>18.2890862424285</statistic>
                <statistic aggregation='Var' datatype='real'>340.80182040530792</statistic>
                <statistic aggregation='VarP' datatype='real'>334.49067558298736</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>283657.42999999988</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>international</remote-name>
              <remote-type>5</remote-type>
              <local-name>[international]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>international</remote-alias>
              <ordinal>4</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3922.6999999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>72.642592592592592</statistic>
                <statistic aggregation='Min' datatype='real'>29.5</statistic>
                <statistic aggregation='Max' datatype='real'>96.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.751844478422145</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.605312507721532</statistic>
                <statistic aggregation='Var' datatype='real'>248.12060447239821</statistic>
                <statistic aggregation='VarP' datatype='real'>243.52577846365008</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>298105.49000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>international_students</remote-name>
              <remote-type>5</remote-type>
              <local-name>[international_students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>international_students</remote-alias>
              <ordinal>5</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>16.079999999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>0.29777777777777775</statistic>
                <statistic aggregation='Min' datatype='real'>0.14999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>0.51000000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.095969072586338022</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.095076317623473197</statistic>
                <statistic aggregation='Var' datatype='real'>0.0092100628930818166</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0090395061728395596</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.2764000000000015</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_students</remote-name>
              <remote-type>3</remote-type>
              <local-name>[num_students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_students</remote-alias>
              <ordinal>6</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>881826.0</statistic>
                <statistic aggregation='Avg' datatype='real'>16330.111111111111</statistic>
                <statistic aggregation='Min' datatype='integer'>2243</statistic>
                <statistic aggregation='Max' datatype='integer'>36186</statistic>
                <statistic aggregation='Stdev' datatype='real'>9070.2118314109211</statistic>
                <statistic aggregation='StdevP' datatype='real'>8985.8359339628914</statistic>
                <statistic aggregation='Var' datatype='real'>82268742.666666672</statistic>
                <statistic aggregation='VarP' datatype='real'>80745247.432098761</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18760559922.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>research</remote-name>
              <remote-type>5</remote-type>
              <local-name>[research]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>research</remote-alias>
              <ordinal>7</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5155.1999999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>95.466666666666669</statistic>
                <statistic aggregation='Min' datatype='real'>87.400000000000006</statistic>
                <statistic aggregation='Max' datatype='real'>99.400000000000006</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.8355831516484931</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.7999025328633702</statistic>
                <statistic aggregation='Var' datatype='real'>14.711698113209787</statistic>
                <statistic aggregation='VarP' datatype='real'>14.439259259261457</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>492929.4800000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>student_staff_ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[student_staff_ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>student_staff_ratio</remote-alias>
              <ordinal>8</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>554.99999999999989</statistic>
                <statistic aggregation='Avg' datatype='real'>10.277777777777775</statistic>
                <statistic aggregation='Min' datatype='real'>6.9000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>16.399999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.7781266028357545</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.7522830029622942</statistic>
                <statistic aggregation='Var' datatype='real'>7.7179874213837305</statistic>
                <statistic aggregation='VarP' datatype='real'>7.5750617283951431</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6113.2200000000021</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teaching</remote-name>
              <remote-type>5</remote-type>
              <local-name>[teaching]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>teaching</remote-alias>
              <ordinal>9</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4879.6999999999989</statistic>
                <statistic aggregation='Avg' datatype='real'>90.364814814814792</statistic>
                <statistic aggregation='Min' datatype='real'>80.400000000000006</statistic>
                <statistic aggregation='Max' datatype='real'>99.700000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.5513903083176741</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.509050873579155</statistic>
                <statistic aggregation='Var' datatype='real'>20.715153738648052</statistic>
                <statistic aggregation='VarP' datatype='real'>20.331539780524942</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>442051.08999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_score</remote-alias>
              <ordinal>10</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4994.0000000000018</statistic>
                <statistic aggregation='Avg' datatype='real'>92.481481481481509</statistic>
                <statistic aggregation='Min' datatype='real'>87.200000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>96.099999999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1125924406752548</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.0929399908276562</statistic>
                <statistic aggregation='Var' datatype='real'>4.4630468203982296</statistic>
                <statistic aggregation='VarP' datatype='real'>4.3803978052056705</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>462089.05999999994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>university_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[university_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>university_name</remote-alias>
              <ordinal>11</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;California Institute of Technology&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;University of Oxford&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>world_rank</remote-name>
              <remote-type>16</remote-type>
              <local-name>[world_rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>world_rank</remote-alias>
              <ordinal>12</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>272.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5.0370370370370372</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>13</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.874500533894035</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.8477604128505312</statistic>
                <statistic aggregation='Var' datatype='real'>8.2627533193570937</statistic>
                <statistic aggregation='VarP' datatype='real'>8.1097393689986284</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1808.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>135</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>13</ordinal>
              <family>timesDataclean2.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2011-01-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-01-01 00:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>54</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2014-01-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.27115' measure-ordering='alphabetic' measure-percentage='0.72885' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:university_name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;California Institute of Technology&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Princeton University&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Massachusetts Institute of Technology&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;University of Oxford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of California, Berkeley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Imperial College London&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Stanford University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harvard University&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;University of Cambridge&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='ClusteringWUR' inline='true' name='excel-direct.41984.551960740740' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='shanghaiDataClean' name='textscan.18wk8ca1skro3n14nm6gk0o0ts8j'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings/Prediction.twb Files/Data/Users/rajpu/AppData/Local/Temp/TableauTemp/2442818971/Data/world-university-rankings' filename='shanghaiDataClean.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='timesDataclean2' name='textscan.1cxqfth17kwk0g14v663x1aev1yw'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='timesDataclean2.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='ClusteredDataCleaned' name='textscan.190f61x1ivh3fm152orgl141meas'>
            <connection class='textscan' directory='C:/Users/rajpu/RWorkspace/r' filename='ClusteredDataCleaned.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.190f61x1ivh3fm152orgl141meas' name='ClusteredDataCleaned.csv' table='[ClusteredDataCleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='university_name' ordinal='1' />
            <column datatype='real' name='alumni' ordinal='2' />
            <column datatype='real' name='award' ordinal='3' />
            <column datatype='real' name='hici' ordinal='4' />
            <column datatype='real' name='ns' ordinal='5' />
            <column datatype='real' name='pub' ordinal='6' />
            <column datatype='integer' name='result.cluster' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>university_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[university_name]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>university_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alumni</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alumni]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>alumni</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>award</remote-name>
            <remote-type>5</remote-type>
            <local-name>[award]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>award</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hici</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hici]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>hici</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ns]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>ns</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pub</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pub]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>pub</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result.cluster</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result.cluster]</local-name>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias>result.cluster</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ClusteredDataCleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Alumni' datatype='real' name='[alumni]' role='measure' type='quantitative' />
      <column caption='Award' datatype='real' name='[award]' role='measure' type='quantitative' />
      <column caption='Hici' datatype='real' name='[hici]' role='measure' type='quantitative' />
      <column caption='Ns' datatype='real' name='[ns]' role='measure' type='quantitative' />
      <column caption='Pub' datatype='real' name='[pub]' role='measure' type='quantitative' />
      <column caption='Result.Cluster' datatype='integer' name='[result.cluster]' role='measure' type='quantitative' />
      <column caption='University Name' datatype='string' name='[university_name]' role='dimension' type='nominal' />
      <column-instance column='[result.cluster]' derivation='Sum' name='[sum:result.cluster:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/rajpu/AppData/Local/Temp/TableauTemp/TEMP_16yn3ho055i5rg1bpgp7s0gsgntx.tde' schema='Extract' tablename='Extract' update-time='05/07/2017 05:14:22 AM' updated-database='C:/Users/rajpu/Documents/My Tableau Repository/Datasources/ClusteringWUR.tde'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4875' timestamp-start='2017-05-07 05:14:22.486' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4875</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11885250.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2438.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4875</statistic>
                <statistic aggregation='Stdev' datatype='real'>1407.4356113158428</statistic>
                <statistic aggregation='StdevP' datatype='real'>1407.2912515420064</statistic>
                <statistic aggregation='Var' datatype='real'>1980875.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1980468.6666666667</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='Median' datatype='integer'>2438</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38631024250.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>alumni</remote-name>
              <remote-type>5</remote-type>
              <local-name>[alumni]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>alumni</remote-alias>
              <ordinal>1</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>368</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>44674.300000000294</statistic>
                <statistic aggregation='Avg' datatype='real'>9.1639589743590353</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.157660656732476</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.156208514500159</statistic>
                <statistic aggregation='Var' datatype='real'>200.43935527119064</statistic>
                <statistic aggregation='VarP' datatype='real'>200.3982395060068</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1386334.8699999938</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>award</remote-name>
              <remote-type>5</remote-type>
              <local-name>[award]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>award</remote-alias>
              <ordinal>2</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>291</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>37453.400000000249</statistic>
                <statistic aggregation='Avg' datatype='real'>7.682748717948769</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.516519180998401</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.514927661513113</statistic>
                <statistic aggregation='Var' datatype='real'>240.76236749429128</statistic>
                <statistic aggregation='VarP' datatype='real'>240.71298034198475</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1461220.8400000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hici</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hici]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hici</remote-alias>
              <ordinal>3</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>454</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>79263.100000000239</statistic>
                <statistic aggregation='Avg' datatype='real'>16.259097435897484</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.391477525429536</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.390001400749986</statistic>
                <statistic aggregation='Var' datatype='real'>207.11462536494346</statistic>
                <statistic aggregation='VarP' datatype='real'>207.07214031358654</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2298223.1500000241</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ns</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ns]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ns</remote-alias>
              <ordinal>4</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>548</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>78382.700000000084</statistic>
                <statistic aggregation='Avg' datatype='real'>16.078502564102582</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.511529250709732</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.510245951126818</statistic>
                <statistic aggregation='Var' datatype='real'>156.53836419136522</statistic>
                <statistic aggregation='VarP' datatype='real'>156.50625375768493</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2023244.429999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pub</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pub]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pub</remote-alias>
              <ordinal>5</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>617</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>186862.10000000006</statistic>
                <statistic aggregation='Avg' datatype='real'>38.330687179487192</statistic>
                <statistic aggregation='Min' datatype='real'>7.2999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>13.01189119670806</statistic>
                <statistic aggregation='StdevP' datatype='real'>13.010556575319175</statistic>
                <statistic aggregation='Var' datatype='real'>169.3093125149687</statistic>
                <statistic aggregation='VarP' datatype='real'>169.27458239958099</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7987766.290000014</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>result.cluster</remote-name>
              <remote-type>16</remote-type>
              <local-name>[result.cluster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>result.cluster</remote-alias>
              <ordinal>6</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11226.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.3027692307692309</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.9062669482953416</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.90617399307192714</statistic>
                <statistic aggregation='Var' datatype='real'>0.82131978157255137</statistic>
                <statistic aggregation='VarP' datatype='real'>0.82115130571992112</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29854.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>university_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[university_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>university_name</remote-alias>
              <ordinal>7</ordinal>
              <family>ClusteredDataCleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>656</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalborg University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4875</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;The University of Tokyo&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.379545' measure-ordering='alphabetic' measure-percentage='0.620455' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:result.cluster:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='cwurData' inline='true' name='federated.13qihaa0kqs7ty121ln9c1mggin9' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cwurData' name='textscan.1ra5aec1faprs51f5k1sq0rvkc6k'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='cwurData.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='education_expenditure_supplementary_data' name='textscan.1nedfip1sdo1rz180ep2b08mtevb'>
            <connection class='textscan' directory='C:/MyStuff/SEM2/DIC/termproject/world-university-rankings' filename='education_expenditure_supplementary_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[cwurData.csv].[institution]' />
                <expression op='[timesData.csv].[university_name]' />
              </expression>
              <expression op='='>
                <expression op='[shanghaiData.csv].[university_name]' />
                <expression op='[timesData.csv].[university_name]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[cwurData.csv].[institution]' />
                <expression op='[shanghaiData.csv].[university_name]' />
              </expression>
            </clause>
            <relation connection='textscan.1ra5aec1faprs51f5k1sq0rvkc6k' name='cwurData.csv' table='[cwurData#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='world_rank' ordinal='0' />
                <column datatype='string' name='institution' ordinal='1' />
                <column datatype='string' name='country' ordinal='2' />
                <column datatype='integer' name='national_rank' ordinal='3' />
                <column datatype='integer' name='quality_of_education' ordinal='4' />
                <column datatype='integer' name='alumni_employment' ordinal='5' />
                <column datatype='integer' name='quality_of_faculty' ordinal='6' />
                <column datatype='integer' name='publications' ordinal='7' />
                <column datatype='integer' name='influence' ordinal='8' />
                <column datatype='integer' name='citations' ordinal='9' />
                <column datatype='integer' name='patents' ordinal='10' />
                <column datatype='real' name='score' ordinal='11' />
                <column datatype='integer' name='year' ordinal='12' />
              </columns>
            </relation>
            <relation connection='textscan.1nedfip1sdo1rz180ep2b08mtevb' name='shanghaiData.csv' table='[shanghaiData#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='world_rank' ordinal='0' />
                <column datatype='string' name='university_name' ordinal='1' />
                <column datatype='string' name='national_rank' ordinal='2' />
                <column datatype='real' name='total_score' ordinal='3' />
                <column datatype='real' name='alumni' ordinal='4' />
                <column datatype='real' name='award' ordinal='5' />
                <column datatype='real' name='hici' ordinal='6' />
                <column datatype='real' name='ns' ordinal='7' />
                <column datatype='real' name='pub' ordinal='8' />
                <column datatype='real' name='pcp' ordinal='9' />
                <column datatype='integer' name='year' ordinal='10' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1nedfip1sdo1rz180ep2b08mtevb' name='timesData.csv' table='[timesData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='world_rank' ordinal='0' />
              <column datatype='string' name='university_name' ordinal='1' />
              <column datatype='string' name='country' ordinal='2' />
              <column datatype='real' name='teaching' ordinal='3' />
              <column datatype='real' name='international' ordinal='4' />
              <column datatype='real' name='research' ordinal='5' />
              <column datatype='real' name='citations' ordinal='6' />
              <column datatype='real' name='income' ordinal='7' />
              <column datatype='real' name='total_score' ordinal='8' />
              <column datatype='integer' name='num_students' ordinal='9' />
              <column datatype='real' name='student_staff_ratio' ordinal='10' />
              <column datatype='real' name='international_students' ordinal='11' />
              <column datatype='real' name='female_male_ratio' ordinal='12' />
              <column datatype='integer' name='year' ordinal='13' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[alumni]' value='[shanghaiData.csv].[alumni]' />
          <map key='[alumni_employment]' value='[cwurData.csv].[alumni_employment]' />
          <map key='[award]' value='[shanghaiData.csv].[award]' />
          <map key='[citations (timesData.csv)]' value='[timesData.csv].[citations]' />
          <map key='[citations]' value='[cwurData.csv].[citations]' />
          <map key='[country (timesData.csv)]' value='[timesData.csv].[country]' />
          <map key='[country]' value='[cwurData.csv].[country]' />
          <map key='[female_male_ratio]' value='[timesData.csv].[female_male_ratio]' />
          <map key='[hici]' value='[shanghaiData.csv].[hici]' />
          <map key='[income]' value='[timesData.csv].[income]' />
          <map key='[influence]' value='[cwurData.csv].[influence]' />
          <map key='[institution]' value='[cwurData.csv].[institution]' />
          <map key='[international]' value='[timesData.csv].[international]' />
          <map key='[international_students]' value='[timesData.csv].[international_students]' />
          <map key='[national_rank (shanghaiData.csv)]' value='[shanghaiData.csv].[national_rank]' />
          <map key='[national_rank]' value='[cwurData.csv].[national_rank]' />
          <map key='[ns]' value='[shanghaiData.csv].[ns]' />
          <map key='[num_students]' value='[timesData.csv].[num_students]' />
          <map key='[patents]' value='[cwurData.csv].[patents]' />
          <map key='[pcp]' value='[shanghaiData.csv].[pcp]' />
          <map key='[pub]' value='[shanghaiData.csv].[pub]' />
          <map key='[publications]' value='[cwurData.csv].[publications]' />
          <map key='[quality_of_education]' value='[cwurData.csv].[quality_of_education]' />
          <map key='[quality_of_faculty]' value='[cwurData.csv].[quality_of_faculty]' />
          <map key='[research]' value='[timesData.csv].[research]' />
          <map key='[score]' value='[cwurData.csv].[score]' />
          <map key='[student_staff_ratio]' value='[timesData.csv].[student_staff_ratio]' />
          <map key='[teaching]' value='[timesData.csv].[teaching]' />
          <map key='[total_score (timesData.csv)]' value='[timesData.csv].[total_score]' />
          <map key='[total_score]' value='[shanghaiData.csv].[total_score]' />
          <map key='[university_name (timesData.csv)]' value='[timesData.csv].[university_name]' />
          <map key='[university_name]' value='[shanghaiData.csv].[university_name]' />
          <map key='[world_rank (shanghaiData.csv)]' value='[shanghaiData.csv].[world_rank]' />
          <map key='[world_rank (timesData.csv)]' value='[timesData.csv].[world_rank]' />
          <map key='[world_rank]' value='[cwurData.csv].[world_rank]' />
          <map key='[year (shanghaiData.csv)]' value='[shanghaiData.csv].[year]' />
          <map key='[year (timesData.csv)]' value='[timesData.csv].[year]' />
          <map key='[year]' value='[cwurData.csv].[year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>world_rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[world_rank]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>world_rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>institution</remote-name>
            <remote-type>129</remote-type>
            <local-name>[institution]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>institution</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>national_rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[national_rank]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>national_rank</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quality_of_education</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quality_of_education]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>quality_of_education</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alumni_employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[alumni_employment]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>alumni_employment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quality_of_faculty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quality_of_faculty]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>quality_of_faculty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>publications</remote-name>
            <remote-type>20</remote-type>
            <local-name>[publications]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>publications</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>influence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[influence]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>influence</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>citations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[citations]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>citations</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>patents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[patents]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>patents</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[score]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>score</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cwurData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>world_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[world_rank (shanghaiData.csv)]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>world_rank</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>university_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[university_name]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>university_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>national_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[national_rank (shanghaiData.csv)]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>national_rank</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_score]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>total_score</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alumni</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alumni]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>alumni</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>award</remote-name>
            <remote-type>5</remote-type>
            <local-name>[award]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>award</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hici</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hici]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>hici</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ns]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>ns</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pub</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pub]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>pub</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pcp]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>pcp</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (shanghaiData.csv)]</local-name>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[shanghaiData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>world_rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[world_rank (timesData.csv)]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>world_rank</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>university_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[university_name (timesData.csv)]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>university_name</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (timesData.csv)]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teaching</remote-name>
            <remote-type>5</remote-type>
            <local-name>[teaching]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>teaching</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>international</remote-name>
            <remote-type>5</remote-type>
            <local-name>[international]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>international</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>research</remote-name>
            <remote-type>5</remote-type>
            <local-name>[research]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>research</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>citations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[citations (timesData.csv)]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>citations</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_score (timesData.csv)]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>total_score</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_students</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_students]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>num_students</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>student_staff_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[student_staff_ratio]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>student_staff_ratio</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>international_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[international_students]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>international_students</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_male_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_male_ratio]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>female_male_ratio</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (timesData.csv)]</local-name>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[timesData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='GlobalAverageScore' datatype='real' name='[Calculation_1248904474381946882]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([score]+[total_score]+[total_score (timesData.csv)])/3' />
      </column>
      <column caption='Qualities' datatype='integer' name='[Calculation_1362057415828332545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([quality_of_education]) + SUM([quality_of_faculty])' />
      </column>
      <column caption='Normalized Score' datatype='real' name='[Calculation_1362057415833219074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([score])/COUNT([institution])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='cwurScore' datatype='real' name='[Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[score]' />
      </column>
      <column caption='timesScore' datatype='real' name='[Total Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_score]' />
      </column>
      <column caption='Alumni' datatype='real' name='[alumni]' role='measure' type='quantitative' />
      <column caption='Alumni Employment' datatype='integer' name='[alumni_employment]' role='measure' type='quantitative' />
      <column caption='Award' datatype='real' name='[award]' role='measure' type='quantitative' />
      <column datatype='real' name='[citations (timesData.csv)]' role='measure' type='quantitative' />
      <column caption='Citations' datatype='integer' name='[citations]' role='measure' type='quantitative' />
      <column datatype='string' name='[country (timesData.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Female Male Ratio' datatype='real' name='[female_male_ratio]' role='dimension' type='ordinal' />
      <column caption='Hici' datatype='real' name='[hici]' role='measure' type='quantitative' />
      <column caption='Income' datatype='real' name='[income]' role='dimension' type='ordinal' />
      <column caption='Influence' datatype='integer' name='[influence]' role='measure' type='quantitative' />
      <column caption='Institution' datatype='string' name='[institution]' role='dimension' type='nominal' />
      <column caption='International' datatype='real' name='[international]' role='measure' type='quantitative' />
      <column caption='International Students' datatype='real' name='[international_students]' role='measure' type='quantitative' />
      <column caption='national rank (shanghaiData.csv)' datatype='string' name='[national_rank (shanghaiData.csv)]' role='dimension' type='nominal' />
      <column caption='National Rank' datatype='integer' name='[national_rank]' role='measure' type='quantitative' />
      <column caption='Ns' datatype='real' name='[ns]' role='measure' type='quantitative' />
      <column caption='Num Students' datatype='integer' name='[num_students]' role='measure' type='quantitative' />
      <column caption='Patents' datatype='integer' name='[patents]' role='measure' type='quantitative' />
      <column caption='Pcp' datatype='real' name='[pcp]' role='measure' type='quantitative' />
      <column caption='Pub' datatype='real' name='[pub]' role='measure' type='quantitative' />
      <column caption='Publications' datatype='integer' name='[publications]' role='measure' type='quantitative' />
      <column caption='Quality Of Education' datatype='integer' name='[quality_of_education]' role='measure' type='quantitative' />
      <column caption='Quality Of Faculty' datatype='integer' name='[quality_of_faculty]' role='measure' type='quantitative' />
      <column caption='Research' datatype='real' name='[research]' role='measure' type='quantitative' />
      <column caption='Score' datatype='real' name='[score]' role='measure' type='quantitative' />
      <column caption='Student Staff Ratio' datatype='real' name='[student_staff_ratio]' role='measure' type='quantitative' />
      <column caption='Teaching' datatype='real' name='[teaching]' role='measure' type='quantitative' />
      <column caption='shanghaiScore' datatype='real' name='[total score (timesData.csv) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_score (timesData.csv)]' />
      </column>
      <column caption='total score (timesData.csv)' datatype='real' name='[total_score (timesData.csv)]' role='dimension' type='ordinal' />
      <column caption='Total Score' datatype='real' name='[total_score]' role='measure' type='quantitative' />
      <column caption='university name (timesData.csv)' datatype='string' name='[university_name (timesData.csv)]' role='dimension' type='nominal' />
      <column caption='University Name' datatype='string' name='[university_name]' role='dimension' type='nominal' />
      <column caption='world rank (shanghaiData.csv)' datatype='string' name='[world_rank (shanghaiData.csv)]' role='dimension' type='nominal' />
      <column caption='world rank (timesData.csv)' datatype='real' name='[world_rank (timesData.csv)]' role='dimension' type='ordinal' />
      <column caption='World Rank' datatype='integer' name='[world_rank]' role='measure' type='quantitative' />
      <column datatype='integer' name='[year (shanghaiData.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[year (timesData.csv)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[citations]' derivation='Avg' name='[avg:citations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[influence]' derivation='Avg' name='[avg:influence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[national_rank]' derivation='Avg' name='[avg:national_rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[publications]' derivation='Avg' name='[avg:publications:qk]' pivot='key' type='quantitative' />
      <column-instance column='[world_rank]' derivation='Avg' name='[avg:world_rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[publications]' derivation='Median' name='[med:publications:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Score (copy)]' derivation='None' name='[none:Score (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[hici]' derivation='None' name='[none:hici:qk]' pivot='key' type='quantitative' />
      <column-instance column='[influence]' derivation='None' name='[none:influence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[national_rank]' derivation='None' name='[none:national_rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ns]' derivation='None' name='[none:ns:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality_of_education]' derivation='None' name='[none:quality_of_education:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality_of_faculty]' derivation='None' name='[none:quality_of_faculty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[score]' derivation='None' name='[none:score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total score (timesData.csv) (copy)]' derivation='None' name='[none:total score (timesData.csv) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[university_name]' derivation='None' name='[none:university_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[world_rank]' derivation='None' name='[none:world_rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1248904474381946882]' derivation='Sum' name='[sum:Calculation_1248904474381946882:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Score (copy)]' derivation='Sum' name='[sum:Score (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Score (copy)]' derivation='Sum' name='[sum:Total Score (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[alumni]' derivation='Sum' name='[sum:alumni:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alumni_employment]' derivation='Sum' name='[sum:alumni_employment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[award]' derivation='Sum' name='[sum:award:qk]' pivot='key' type='quantitative' />
      <column-instance column='[citations (timesData.csv)]' derivation='Sum' name='[sum:citations (timesData.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[citations]' derivation='Sum' name='[sum:citations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hici]' derivation='Sum' name='[sum:hici:qk]' pivot='key' type='quantitative' />
      <column-instance column='[influence]' derivation='Sum' name='[sum:influence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[international]' derivation='Sum' name='[sum:international:qk]' pivot='key' type='quantitative' />
      <column-instance column='[international_students]' derivation='Sum' name='[sum:international_students:qk]' pivot='key' type='quantitative' />
      <column-instance column='[national_rank]' derivation='Sum' name='[sum:national_rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ns]' derivation='Sum' name='[sum:ns:qk]' pivot='key' type='quantitative' />
      <column-instance column='[num_students]' derivation='Sum' name='[sum:num_students:qk]' pivot='key' type='quantitative' />
      <column-instance column='[patents]' derivation='Sum' name='[sum:patents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pcp]' derivation='Sum' name='[sum:pcp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pub]' derivation='Sum' name='[sum:pub:qk]' pivot='key' type='quantitative' />
      <column-instance column='[publications]' derivation='Sum' name='[sum:publications:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality_of_education]' derivation='Sum' name='[sum:quality_of_education:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality_of_faculty]' derivation='Sum' name='[sum:quality_of_faculty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[research]' derivation='Sum' name='[sum:research:qk]' pivot='key' type='quantitative' />
      <column-instance column='[score]' derivation='Sum' name='[sum:score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[student_staff_ratio]' derivation='Sum' name='[sum:student_staff_ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[teaching]' derivation='Sum' name='[sum:teaching:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total score (timesData.csv) (copy)]' derivation='Sum' name='[sum:total score (timesData.csv) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_score (timesData.csv)]' derivation='Sum' name='[sum:total_score (timesData.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_score]' derivation='Sum' name='[sum:total_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[world_rank]' derivation='Sum' name='[sum:world_rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1362057415828332545]' derivation='User' name='[usr:Calculation_1362057415828332545:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1362057415833219074]' derivation='User' name='[usr:Calculation_1362057415833219074:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/rajpu/Documents/My Tableau Repository/Datasources/cwurData.tde' schema='Extract' tablename='Extract' update-time='05/07/2017 01:46:11 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Calculation_1248904474381946882]' value='[Extract].[Calculation_1248904474381946882]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Score (copy)]' value='[Extract].[Score (copy)]' />
            <map key='[Total Score (copy)]' value='[Extract].[Total Score (copy)]' />
            <map key='[alumni]' value='[Extract].[alumni]' />
            <map key='[alumni_employment]' value='[Extract].[alumni_employment]' />
            <map key='[award]' value='[Extract].[award]' />
            <map key='[citations (timesData.csv)]' value='[Extract].[citations]' />
            <map key='[citations]' value='[Extract].[citations1]' />
            <map key='[country (timesData.csv)]' value='[Extract].[country]' />
            <map key='[country]' value='[Extract].[country1]' />
            <map key='[female_male_ratio]' value='[Extract].[female_male_ratio]' />
            <map key='[hici]' value='[Extract].[hici]' />
            <map key='[income]' value='[Extract].[income]' />
            <map key='[influence]' value='[Extract].[influence]' />
            <map key='[institution]' value='[Extract].[institution]' />
            <map key='[international]' value='[Extract].[international]' />
            <map key='[international_students]' value='[Extract].[international_students]' />
            <map key='[national_rank (shanghaiData.csv)]' value='[Extract].[national_rank]' />
            <map key='[national_rank]' value='[Extract].[national_rank1]' />
            <map key='[ns]' value='[Extract].[ns]' />
            <map key='[num_students]' value='[Extract].[num_students]' />
            <map key='[patents]' value='[Extract].[patents]' />
            <map key='[pcp]' value='[Extract].[pcp]' />
            <map key='[pub]' value='[Extract].[pub]' />
            <map key='[publications]' value='[Extract].[publications]' />
            <map key='[quality_of_education]' value='[Extract].[quality_of_education]' />
            <map key='[quality_of_faculty]' value='[Extract].[quality_of_faculty]' />
            <map key='[research]' value='[Extract].[research]' />
            <map key='[score]' value='[Extract].[score]' />
            <map key='[student_staff_ratio]' value='[Extract].[student_staff_ratio]' />
            <map key='[teaching]' value='[Extract].[teaching]' />
            <map key='[total score (timesData.csv) (copy)]' value='[Extract].[total score (timesData.csv) (copy)]' />
            <map key='[total_score (timesData.csv)]' value='[Extract].[total_score]' />
            <map key='[total_score]' value='[Extract].[total_score1]' />
            <map key='[university_name (timesData.csv)]' value='[Extract].[university_name]' />
            <map key='[university_name]' value='[Extract].[university_name1]' />
            <map key='[world_rank (shanghaiData.csv)]' value='[Extract].[world_rank]' />
            <map key='[world_rank (timesData.csv)]' value='[Extract].[world_rank1]' />
            <map key='[world_rank]' value='[Extract].[world_rank2]' />
            <map key='[year (shanghaiData.csv)]' value='[Extract].[year]' />
            <map key='[year (timesData.csv)]' value='[Extract].[year1]' />
            <map key='[year]' value='[Extract].[year2]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_1248904474381946882]' formula='([score]+[total_score]+[total_score (timesData.csv)])/3' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Score (copy)]' formula='[score]' />
            <calculation column='[Total Score (copy)]' formula='[total_score]' />
            <calculation column='[total score (timesData.csv) (copy)]' formula='[total_score (timesData.csv)]' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='33178' timestamp-start='2017-05-07 01:46:11.931' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1248904474381946882</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1248904474381946882]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1248904474381946882</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6949</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>38.520000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>98.700000000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>13938</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>33178.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>33178.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score (copy)</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>543</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>43.469999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Score (copy)</remote-alias>
              <ordinal>3</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>23.800000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>14264</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>alumni</remote-name>
              <remote-type>5</remote-type>
              <local-name>[alumni]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>alumni</remote-alias>
              <ordinal>4</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>299</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>alumni_employment</remote-name>
              <remote-type>2</remote-type>
              <local-name>[alumni_employment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>alumni_employment</remote-alias>
              <ordinal>5</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>384</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>567</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>award</remote-name>
              <remote-type>5</remote-type>
              <local-name>[award]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>award</remote-alias>
              <ordinal>6</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>citations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[citations (timesData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>citations</remote-alias>
              <ordinal>7</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>656</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.1000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>citations1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[citations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>citations1</remote-alias>
              <ordinal>8</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>126</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>812</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country (timesData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>9</ordinal>
              <family>timesData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australia&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States of America&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country1</remote-alias>
              <ordinal>10</ordinal>
              <family>cwurData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australia&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_male_ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[female_male_ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>female_male_ratio</remote-alias>
              <ordinal>11</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hici</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hici]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hici</remote-alias>
              <ordinal>12</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>371</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>income</remote-name>
              <remote-type>5</remote-type>
              <local-name>[income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>income</remote-alias>
              <ordinal>13</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>511</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>24.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>30042</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>influence</remote-name>
              <remote-type>2</remote-type>
              <local-name>[influence]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>influence</remote-alias>
              <ordinal>14</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>555</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6112030.0</statistic>
                <statistic aggregation='Avg' datatype='real'>184.2193622279824</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>984</statistic>
                <statistic aggregation='Stdev' datatype='real'>169.48424229047296</statistic>
                <statistic aggregation='StdevP' datatype='real'>169.48168810517859</statistic>
                <statistic aggregation='Var' datatype='real'>28724.908384775739</statistic>
                <statistic aggregation='VarP' datatype='real'>28724.042602981033</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2078960554.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>institution</remote-name>
              <remote-type>129</remote-type>
              <local-name>[institution]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>institution</remote-alias>
              <ordinal>15</ordinal>
              <family>cwurData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>362</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalborg University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>international</remote-name>
              <remote-type>5</remote-type>
              <local-name>[international]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>international</remote-alias>
              <ordinal>16</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>677</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>99.5</statistic>
                <statistic aggregation='Count' datatype='integer'>32968</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>international_students</remote-name>
              <remote-type>5</remote-type>
              <local-name>[international_students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>international_students</remote-alias>
              <ordinal>17</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.47999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>32696</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>national_rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[national_rank (shanghaiData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>national_rank</remote-alias>
              <ordinal>18</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>267</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;91-119&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>national_rank1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[national_rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>national_rank1</remote-alias>
              <ordinal>19</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>763340.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.00741455181144</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>216</statistic>
                <statistic aggregation='Stdev' datatype='real'>31.200638225250568</statistic>
                <statistic aggregation='StdevP' datatype='real'>31.20016802099882</statistic>
                <statistic aggregation='Var' datatype='real'>973.47982566296696</statistic>
                <statistic aggregation='VarP' datatype='real'>973.45048453855736</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>49859620.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ns</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ns]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ns</remote-alias>
              <ordinal>20</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>474</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33154</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_students</remote-name>
              <remote-type>3</remote-type>
              <local-name>[num_students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_students</remote-alias>
              <ordinal>21</ordinal>
              <family>timesData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>352</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1211</statistic>
                <statistic aggregation='Max' datatype='integer'>231941</statistic>
                <statistic aggregation='Count' datatype='integer'>32804</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>patents</remote-name>
              <remote-type>2</remote-type>
              <local-name>[patents]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>patents</remote-alias>
              <ordinal>22</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>365</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>871</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pcp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pcp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pcp</remote-alias>
              <ordinal>23</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>370</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>8.6999999999999993</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pub</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pub]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pub</remote-alias>
              <ordinal>24</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>546</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>14.699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>publications</remote-name>
              <remote-type>2</remote-type>
              <local-name>[publications]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>publications</remote-alias>
              <ordinal>25</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>534</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5764818.0</statistic>
                <statistic aggregation='Avg' datatype='real'>173.75423473385979</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>964</statistic>
                <statistic aggregation='Stdev' datatype='real'>158.21913199258552</statistic>
                <statistic aggregation='StdevP' datatype='real'>158.2167475763427</statistic>
                <statistic aggregation='Var' datatype='real'>25033.293728487202</statistic>
                <statistic aggregation='VarP' datatype='real'>25032.539213636141</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1832191126.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quality_of_education</remote-name>
              <remote-type>2</remote-type>
              <local-name>[quality_of_education]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quality_of_education</remote-alias>
              <ordinal>26</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>295</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6101836.0</statistic>
                <statistic aggregation='Avg' datatype='real'>183.91211043462536</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>367</statistic>
                <statistic aggregation='Stdev' datatype='real'>130.73070333777855</statistic>
                <statistic aggregation='StdevP' datatype='real'>130.72873318152403</statistic>
                <statistic aggregation='Var' datatype='real'>17090.516795190262</statistic>
                <statistic aggregation='VarP' datatype='real'>17090.001679246107</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1689213612.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quality_of_faculty</remote-name>
              <remote-type>2</remote-type>
              <local-name>[quality_of_faculty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quality_of_faculty</remote-alias>
              <ordinal>27</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>169</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4424707.0</statistic>
                <statistic aggregation='Avg' datatype='real'>133.36268008921576</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>218</statistic>
                <statistic aggregation='Stdev' datatype='real'>79.014315444140507</statistic>
                <statistic aggregation='StdevP' datatype='real'>79.013124671477371</statistic>
                <statistic aggregation='Var' datatype='real'>6243.2620451061421</statistic>
                <statistic aggregation='VarP' datatype='real'>6243.0738703504267</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>797223489.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>research</remote-name>
              <remote-type>5</remote-type>
              <local-name>[research]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>research</remote-alias>
              <ordinal>28</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>617</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>7.7000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>99.400000000000006</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>score</remote-alias>
              <ordinal>29</ordinal>
              <family>cwurData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>543</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>43.469999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>student_staff_ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[student_staff_ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>student_staff_ratio</remote-alias>
              <ordinal>30</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>202</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.59999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>70.400000000000006</statistic>
                <statistic aggregation='Count' datatype='integer'>32804</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teaching</remote-name>
              <remote-type>5</remote-type>
              <local-name>[teaching]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>teaching</remote-alias>
              <ordinal>31</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>557</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>99.700000000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total score (timesData.csv) (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total score (timesData.csv) (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total score (timesData.csv) (copy)</remote-alias>
              <ordinal>32</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>348</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>41.399999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>96.099999999999994</statistic>
                <statistic aggregation='Count' datatype='integer'>22752</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_score (timesData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_score</remote-alias>
              <ordinal>33</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>348</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>41.399999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>96.099999999999994</statistic>
                <statistic aggregation='Count' datatype='integer'>22752</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_score1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_score1</remote-alias>
              <ordinal>34</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>23.800000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>14264</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>university_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[university_name (timesData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>university_name</remote-alias>
              <ordinal>35</ordinal>
              <family>timesData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>362</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalborg University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>university_name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[university_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>university_name1</remote-alias>
              <ordinal>36</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>362</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalborg University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>world_rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[world_rank (shanghaiData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>world_rank</remote-alias>
              <ordinal>37</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>118</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>world_rank1</remote-name>
              <remote-type>4</remote-type>
              <local-name>[world_rank (timesData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>world_rank1</remote-alias>
              <ordinal>38</ordinal>
              <family>timesData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>200.0</statistic>
                <statistic aggregation='Count' datatype='integer'>21220</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>world_rank2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[world_rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>world_rank2</remote-alias>
              <ordinal>39</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>532</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5875161.0</statistic>
                <statistic aggregation='Avg' datatype='real'>177.08002290674543</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>995</statistic>
                <statistic aggregation='Stdev' datatype='real'>160.16552784186754</statistic>
                <statistic aggregation='StdevP' datatype='real'>160.16311409277591</statistic>
                <statistic aggregation='Var' datatype='real'>25652.996308864051</statistic>
                <statistic aggregation='VarP' datatype='real'>25652.223115895551</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1891463103.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[year (shanghaiData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>40</ordinal>
              <family>shanghaiData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>66681319.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2009.8052625233588</statistic>
                <statistic aggregation='Min' datatype='integer'>2005</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.1968351043449759</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1967869269504186</statistic>
                <statistic aggregation='Var' datatype='real'>10.219754684372353</statistic>
                <statistic aggregation='VarP' datatype='real'>10.219446656321102</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>134016804899.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[year (timesData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year1</remote-alias>
              <ordinal>41</ordinal>
              <family>timesData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>66811392.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2013.7257218638856</statistic>
                <statistic aggregation='Min' datatype='integer'>2011</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.6747826831978392</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.6747574436520096</statistic>
                <statistic aggregation='Var' datatype='real'>2.8048970359393537</statistic>
                <statistic aggregation='VarP' datatype='real'>2.8048124950678139</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>134539911642.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year2</remote-alias>
              <ordinal>42</ordinal>
              <family>cwurData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2012</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Count' datatype='integer'>33178</statistic>
                <statistic aggregation='Median' datatype='integer'>2014</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.434091' measure-ordering='alphabetic' measure-percentage='0.565909' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:university_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Autonomous University of Madrid&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charles University in Prague&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East China University of Science and Technology&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harbin Institute of Technology&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Abdulaziz University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McMaster University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;National University of Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polytechnic University of Valencia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Simon Fraser University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tokyo University of Agriculture and Technology&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Birmingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Cape Town&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Gothenburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Lausanne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Nottingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Siena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Turku&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Victoria University of Wellington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aalborg University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Capital Medical University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dalhousie University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Mason University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jilin University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lehigh University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nanyang Technological University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oregon State University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Louis University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Technical University of Denmark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Antwerp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of California, Irvine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Essex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Illinois at Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Montreal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Pisa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Tasmania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Wollongong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;York University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aristotle University of Thessaloniki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Case Western Reserve University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delft University of Technology&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gifu University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kansas State University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maastricht University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;National Cheng Kung University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peking University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seoul National University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tilburg University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Bath&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of California, Santa Barbara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Florida&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Kentucky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Newcastle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Toronto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Zurich&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bielefeld University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;City University of Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ewha Womans University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Howard University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kumamoto University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Memorial University of Newfoundland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newcastle University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pusan National University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stellenbosch University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tufts University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Bradford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Coimbra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Groningen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Liverpool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Ottawa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of St Andrews&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Vermont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wake Forest University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chiba University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ehime University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harvard University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;King Saud University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Medical College of Wisconsin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Jersey Institute of Technology&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pompeu Fabra University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South China University of Technology&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokyo University of Science&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Bologna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Chicago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Granada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Leeds&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Oregon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Southampton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Twente&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vienna University of Technology&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona State University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Catholic University of the Sacred Heart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drexel University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Griffith University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Karolinska Institute&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macquarie University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;National Chiao Tung University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pohang University of Science and Technology&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shanghai Jiao Tong University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tohoku University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Belgrade&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of California, Santa Cruz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Fribourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Kiel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Nice Sophia Antipolis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Saskatchewan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Trieste&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uppsala University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cairo University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cornell University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Florida State University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jagiellonian University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lancaster University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nagoya University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Okayama University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rush University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syracuse University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Alberta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of California, Berkeley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Eastern Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Houston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Miami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Pavia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Sydney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Warwick&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yeshiva University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aalto University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cardiff University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dalian University of Technology&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgetown University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Johns Hopkins University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leiden University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;National and Kapodistrian University of Athens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Osaka City University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Petersburg State University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tel Aviv University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of California, Los Angeles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Exeter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Innsbruck&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Naples Federico II&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Porto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Tehran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zhejiang University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brandeis University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Complutense University of Madrid&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flinders University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iowa State University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyushu University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Murdoch University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norwegian University of Science and Technology&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rensselaer Polytechnic Institute&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swedish University of Agricultural Sciences&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University College London&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Cagliari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Duisburg-Essen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Helsinki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Maryland, College Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Palermo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Surrey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Virginia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Xiamen University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Auburn University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chalmers University of Technology&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duke University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hacettepe University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keio University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Massey University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;National Taiwan University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Polytechnic University of Catalonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sharif University of Technology&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tokyo Institute of Technology&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Bergen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Cambridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Geneva&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Konstanz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of North Carolina at Chapel Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Science and Technology of China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Tsukuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Utrecht University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Birkbeck, University of London&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Claude Bernard University Lyon 1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Federal University of Minas Gerais&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huazhong University of Science and Technology&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyoto University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michigan State University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niigata University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queen Mary University of London&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stockholm University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tulane University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Bremen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Connecticut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Guelph&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Ljubljana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Oulu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Strasbourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Victoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waseda University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boston College&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clemson University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Federal University of Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indian Institute of Science&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyung Hee University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michigan Technological University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northeastern University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queensland University of Technology&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stony Brook University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University College Cork&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Bristol&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Copenhagen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Haifa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Manitoba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Oxford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Strathclyde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Vienna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wayne State University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brown University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Concordia University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Florida International University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Istanbul University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;La Trobe University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nagasaki University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ohio University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rice University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swinburne University of Technology&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Aberdeen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Calcutta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of East Anglia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Hertfordshire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Melbourne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Parma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Sussex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Warsaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yale University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;California Institute of Technology&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Curtin University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fudan University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Cook University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laval University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nanjing University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Old Dominion University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RWTH Aachen University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Technical University of Berlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Amsterdam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of California, Davis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Erlangen-Nuremberg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Idaho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Milan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Szeged&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Waterloo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yonsei University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bar-Ilan University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China Agricultural University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eindhoven University of Technology&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kobe University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medical University of South Carolina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Mexico State University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portland State University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Methodist University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tongji University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Bonn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Chile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Graz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Leicester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Oslo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Southern California&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Utah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Polytechnic Institute and State University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Autonomous University of Barcelona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chang Gung University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Durham University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hanyang University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kent State University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McGill University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;National Tsing Hua University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Polytechnic University of Turin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sichuan University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokyo Metropolitan University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Bern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Canterbury&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Genoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of KwaZulu-Natal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Notre Dame&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Seville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Turin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanderbilt University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aarhus University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carleton University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dartmouth College&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia Institute of Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juntendo University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Loughborough University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;National Autonomous University of Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Osaka Prefecture University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Diego State University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Temple University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Barcelona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of California, Riverside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Ferrara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Iowa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Nebraska Medical Center&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Pretoria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of the Basque Country&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of York&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boston University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Federal University of Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indian Institute of Technology Kharagpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyungpook National University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monash University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northwestern University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Radboud University Nijmegen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sun Yat-sen University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University College Dublin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of British Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Delaware&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Hamburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Maryland, Baltimore County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Padua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Stuttgart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Vigo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wuhan University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ben-Gurion University of the Negev&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chungnam National University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Emory University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hokkaido University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korea University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medical University of Vienna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Princeton University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stanford University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tsinghua University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Bordeaux&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Cincinnati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Greifswald&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Lisbon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Otago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Southern Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Valencia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VU University Amsterdam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aix-Marseille University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carnegie Mellon University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Deakin University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghent University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kanazawa University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lund University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;National Central University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Osaka University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sapienza University of Rome&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tianjin University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Basel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of California, San Diego&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Florence&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Kansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of New South Wales&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Rennes 1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of the Witwatersrand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Zaragoza&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:quality_of_faculty:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:quality_of_faculty:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[usr:Calculation_1362057415833219074:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Calculation_1248904474381946882:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:pcp:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:Score (copy):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:student_staff_ratio:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:total_score:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:citations:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:citations:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:publications:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[med:publications:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:publications:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:national_rank:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:national_rank:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:international_students:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:national_rank:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:world_rank:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:world_rank:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:world_rank:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:ns:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:ns:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:teaching:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:total score (timesData.csv) (copy):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:award:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:total score (timesData.csv) (copy):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:quality_of_education:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:quality_of_education:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[usr:Calculation_1248904474399744003:qk:2]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:broad_impact:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:hici:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:alumni:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:hici:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:pub:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:score:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:score:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[usr:Calculation_1362057415828332545:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Total Score (copy):qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:alumni_employment:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:international:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:research:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:total_score (timesData.csv):qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:patents:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:influence:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:influence:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:influence:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[usr:Calculation_456833890221871104:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:num_students:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:citations (timesData.csv):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='FeatureRanks'>
      <table>
        <view>
          <datasources>
            <datasource caption='cwurData' name='federated.13qihaa0kqs7ty121ln9c1mggin9' />
          </datasources>
          <datasource-dependencies datasource='federated.13qihaa0kqs7ty121ln9c1mggin9'>
            <column caption='cwurScore' datatype='real' name='[Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[score]' />
            </column>
            <column caption='Citations' datatype='integer' name='[citations]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Influence' datatype='integer' name='[influence]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Patents' datatype='integer' name='[patents]' role='measure' type='quantitative' />
            <column caption='Publications' datatype='integer' name='[publications]' role='measure' type='quantitative' />
            <column caption='Score' datatype='real' name='[score]' role='measure' type='quantitative' />
            <column-instance column='[Score (copy)]' derivation='Sum' name='[sum:Score (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[citations]' derivation='Sum' name='[sum:citations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[influence]' derivation='Sum' name='[sum:influence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[patents]' derivation='Sum' name='[sum:patents:qk]' pivot='key' type='quantitative' />
            <column-instance column='[publications]' derivation='Sum' name='[sum:publications:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' direction='DESC' using='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:citations:qk]' field-type='quantitative' max='1251641' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:citations:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:citations:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:influence:qk]' field-type='quantitative' max='1414917' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:influence:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:influence:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:publications:qk]' field-type='quantitative' max='1679899' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:publications:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:publications:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:patents:qk]' field-type='quantitative' max='1549443' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:patents:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:patents:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
              <tooltip column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:citations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
              <tooltip column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:influence:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
              <tooltip column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' x-axis-name='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:publications:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
              <tooltip column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' x-axis-name='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:patents:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
              <tooltip column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</rows>
        <cols>([federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:citations:qk] + ([federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:influence:qk] + ([federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:publications:qk] + [federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:patents:qk])))</cols>
      </table>
    </worksheet>
    <worksheet name='FutureTopUniversities'>
      <table>
        <view>
          <datasources>
            <datasource caption='timesData' name='federated.1nia1jd08pg31b1duuwl70l0f3xc' />
          </datasources>
          <datasource-dependencies datasource='federated.1nia1jd08pg31b1duuwl70l0f3xc'>
            <column-instance column='[world_rank]' derivation='Sum' forecast-column-base='[sum:world_rank:qk]' forecast-column-type='forecast-value' name='[fVal:sum:world_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[university_name]' derivation='None' name='[none:university_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[world_rank]' derivation='Sum' name='[sum:world_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='University Name' datatype='string' name='[university_name]' role='dimension' type='nominal' />
            <column caption='World Rank' datatype='integer' name='[world_rank]' role='measure' type='quantitative' />
            <column caption='Year' datatype='datetime' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]'>
            <groupfilter function='level-members' level='[none:university_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[fVal:sum:world_rank:qk]' field-type='quantitative' max='11' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[fVal:sum:world_rank:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[fVal:sum:world_rank:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[tyr:year:qk]' field-type='quantitative' max='#2020-09-29 16:49:09.952#' min='#2007-08-20 08:16:58.944#' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[tyr:year:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[tyr:year:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[tyr:year:qk]</rows>
        <cols>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[fVal:sum:world_rank:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='90.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='5' range-type='end-of' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='GlobalScore'>
      <table>
        <view>
          <datasources>
            <datasource caption='cwurData' name='federated.13qihaa0kqs7ty121ln9c1mggin9' />
          </datasources>
          <datasource-dependencies datasource='federated.13qihaa0kqs7ty121ln9c1mggin9'>
            <column caption='GlobalAverageScore' datatype='real' name='[Calculation_1248904474381946882]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([score]+[total_score]+[total_score (timesData.csv)])/3' />
            </column>
            <column caption='cwurScore' datatype='real' name='[Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[score]' />
            </column>
            <column caption='timesScore' datatype='real' name='[Total Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_score]' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total score (timesData.csv) (copy)]' derivation='None' name='[none:total score (timesData.csv) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[university_name]' derivation='None' name='[none:university_name:nk]' pivot='key' type='nominal' />
            <column caption='Score' datatype='real' name='[score]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1248904474381946882]' derivation='Sum' name='[sum:Calculation_1248904474381946882:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score (copy)]' derivation='Sum' name='[sum:Score (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Score (copy)]' derivation='Sum' name='[sum:Total Score (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total score (timesData.csv) (copy)]' derivation='Sum' name='[sum:total score (timesData.csv) (copy):qk]' pivot='key' type='quantitative' />
            <column caption='shanghaiScore' datatype='real' name='[total score (timesData.csv) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_score (timesData.csv)]' />
            </column>
            <column caption='total score (timesData.csv)' datatype='real' name='[total_score (timesData.csv)]' role='dimension' type='ordinal' />
            <column caption='Total Score' datatype='real' name='[total_score]' role='measure' type='quantitative' />
            <column caption='University Name' datatype='string' name='[university_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Calculation_1248904474381946882:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Total Score (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:total score (timesData.csv) (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Calculation_1248904474381946882:qk]&quot;</bucket>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Total Score (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:total score (timesData.csv) (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:university_name:nk]' direction='DESC' using='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Calculation_1248904474381946882:qk]' />
          <filter class='quantitative' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Calculation_1248904474381946882:qk]' included-values='in-range'>
            <min>19000.0</min>
          </filter>
          <filter class='quantitative' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Total Score (copy):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:total score (timesData.csv) (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names]</column>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</column>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Calculation_1248904474381946882:qk]</column>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Score (copy):qk]</column>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Total Score (copy):qk]</column>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:total score (timesData.csv) (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[Multiple Values]' field-type='quantitative' max='27720.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-orientation' value='-90' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='bottom' />
            <format attr='wrap' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.13qihaa0kqs7ty121ln9c1mggin9].[Multiple Values]</rows>
        <cols>([federated.13qihaa0kqs7ty121ln9c1mggin9].[none:university_name:nk] / [federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Ratios'>
      <table>
        <view>
          <datasources>
            <datasource caption='cwurData' name='federated.13qihaa0kqs7ty121ln9c1mggin9' />
          </datasources>
          <datasource-dependencies datasource='federated.13qihaa0kqs7ty121ln9c1mggin9'>
            <column datatype='string' name='[country (timesData.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Female Male Ratio' datatype='real' name='[female_male_ratio]' role='dimension' type='ordinal' />
            <column-instance column='[female_male_ratio]' derivation='Max' name='[max:female_male_ratio:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (timesData.csv)]' derivation='None' name='[none:country (timesData.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Num Students' datatype='integer' name='[num_students]' role='measure' type='quantitative' />
            <column caption='Student Staff Ratio' datatype='real' name='[student_staff_ratio]' role='measure' type='quantitative' />
            <column-instance column='[num_students]' derivation='Sum' name='[sum:num_students:qk]' pivot='key' type='quantitative' />
            <column-instance column='[student_staff_ratio]' derivation='Sum' name='[sum:student_staff_ratio:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:student_staff_ratio:qk]' />
              <size column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:num_students:qk]' />
              <lod column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[max:female_male_ratio:ok]' />
              <text column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country (timesData.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='ScoreVSQuality'>
      <table>
        <view>
          <datasources>
            <datasource caption='cwurData' name='federated.13qihaa0kqs7ty121ln9c1mggin9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13qihaa0kqs7ty121ln9c1mggin9'>
            <column caption='Qualities' datatype='integer' name='[Calculation_1362057415828332545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([quality_of_education]) + SUM([quality_of_faculty])' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Quality Of Education' datatype='integer' name='[quality_of_education]' role='measure' type='quantitative' />
            <column caption='Quality Of Faculty' datatype='integer' name='[quality_of_faculty]' role='measure' type='quantitative' />
            <column caption='Score' datatype='real' name='[score]' role='measure' type='quantitative' />
            <column-instance column='[score]' derivation='Sum' name='[sum:score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1362057415828332545]' derivation='User' name='[usr:Calculation_1362057415828332545:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[Longitude (generated)]' field-type='quantitative' max='45205607.30357483' min='-30404678.083668962' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[Latitude (generated)]' field-type='quantitative' max='10420555.285082206' min='-28715203.196928032' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:score:qk]' />
              <size column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[usr:Calculation_1362057415828332545:qk]' />
              <text column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
              <lod column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13qihaa0kqs7ty121ln9c1mggin9].[Latitude (generated)]</rows>
        <cols>[federated.13qihaa0kqs7ty121ln9c1mggin9].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='UniversityClusters'>
      <table>
        <view>
          <datasources>
            <datasource caption='ClusteringWUR' name='excel-direct.41984.551960740740' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41984.551960740740'>
            <column caption='Award' datatype='real' name='[award]' role='measure' type='quantitative' />
            <column caption='Hici' datatype='real' name='[hici]' role='measure' type='quantitative' />
            <column caption='Ns' datatype='real' name='[ns]' role='measure' type='quantitative' />
            <column caption='Pub' datatype='real' name='[pub]' role='measure' type='quantitative' />
            <column caption='Result.Cluster' datatype='integer' name='[result.cluster]' role='measure' type='quantitative' />
            <column-instance column='[award]' derivation='Sum' name='[sum:award:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hici]' derivation='Sum' name='[sum:hici:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ns]' derivation='Sum' name='[sum:ns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pub]' derivation='Sum' name='[sum:pub:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result.cluster]' derivation='Sum' name='[sum:result.cluster:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='12'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
              <shape column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' y-axis-name='[excel-direct.41984.551960740740].[sum:hici:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
              <shape column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='14' y-axis-name='[excel-direct.41984.551960740740].[sum:ns:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
              <shape column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='15' y-axis-name='[excel-direct.41984.551960740740].[sum:pub:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
              <shape column='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='389' />
                <format attr='maxwidth' value='389' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.41984.551960740740].[sum:hici:qk] + ([excel-direct.41984.551960740740].[sum:ns:qk] + [excel-direct.41984.551960740740].[sum:pub:qk]))</rows>
        <cols>[excel-direct.41984.551960740740].[sum:award:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='WorldRanking'>
      <table>
        <view>
          <datasources>
            <datasource caption='cwurData' name='federated.13qihaa0kqs7ty121ln9c1mggin9' />
          </datasources>
          <datasource-dependencies datasource='federated.13qihaa0kqs7ty121ln9c1mggin9'>
            <column-instance column='[national_rank]' derivation='Avg' name='[avg:national_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[world_rank]' derivation='Avg' name='[avg:world_rank:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='National Rank' datatype='integer' name='[national_rank]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[university_name]' derivation='None' name='[none:university_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year (shanghaiData.csv)]' derivation='None' name='[none:year (shanghaiData.csv):ok]' pivot='key' type='ordinal' />
            <column caption='University Name' datatype='string' name='[university_name]' role='dimension' type='nominal' />
            <column caption='World Rank' datatype='integer' name='[world_rank]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year (shanghaiData.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:university_name:nk]' direction='ASC' using='[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:world_rank:qk]' />
          <filter class='categorical' column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year (shanghaiData.csv):ok]'>
            <groupfilter function='level-members' level='[none:year (shanghaiData.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</column>
            <column>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year (shanghaiData.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:world_rank:qk]' field-type='quantitative' max='200.0' min='1.0' range-type='fixed' scale='log' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:world_rank:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:world_rank:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:national_rank:qk]' />
              <text column='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:world_rank:qk]</rows>
        <cols>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:university_name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Forecast Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='timesData' name='federated.1nia1jd08pg31b1duuwl70l0f3xc' />
      </datasources>
      <datasource-dependencies datasource='federated.1nia1jd08pg31b1duuwl70l0f3xc'>
        <column-instance column='[university_name]' derivation='None' name='[none:university_name:nk]' pivot='key' type='nominal' />
        <column caption='University Name' datatype='string' name='[university_name]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='UniversityClusters' w='42000' x='42000' y='0' />
              <zone h='100000' id='7' name='FutureTopUniversities' w='42000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='11250' id='6' name='UniversityClusters' pane-specification-id='13' param='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' type='color' w='16000' x='84000' y='0' />
              <zone h='27750' id='8' name='FutureTopUniversities' param='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]' type='filter' w='16000' x='84000' y='11250' />
              <zone h='25750' id='9' name='FutureTopUniversities' pane-specification-id='2' param='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]' type='color' w='16000' x='84000' y='39000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WURDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='cwurData' name='federated.13qihaa0kqs7ty121ln9c1mggin9' />
      </datasources>
      <datasource-dependencies datasource='federated.13qihaa0kqs7ty121ln9c1mggin9'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='33333' id='1' name='ScoreVSQuality' w='42000' x='0' y='0' />
              <zone h='33333' id='13' name='FeatureRanks' w='42000' x='42000' y='0' />
              <zone h='66667' id='22' name='GlobalScore' w='42000' x='42000' y='33333' />
              <zone h='66667' id='25' name='Ratios' w='42000' x='0' y='33333' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8625' id='6' name='ScoreVSQuality' pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:score:qk]' type='color' w='16000' x='84000' y='0' />
              <zone h='13250' id='7' name='ScoreVSQuality' pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[usr:Calculation_1362057415828332545:qk]' type='size' w='16000' x='84000' y='8625' />
              <zone h='20187' id='14' name='FeatureRanks' pane-specification-id='3' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' type='color' w='16000' x='84000' y='21875' />
              <zone h='20187' id='23' name='GlobalScore' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' type='filter' w='16000' x='84000' y='42062' />
              <zone h='13250' id='24' name='GlobalScore' pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names]' type='color' w='16000' x='84000' y='62249' />
              <zone h='15875' id='26' name='Ratios' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year:ok]' type='filter' w='16000' x='84000' y='75499' />
              <zone h='8626' id='27' name='Ratios' pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:student_staff_ratio:qk]' type='color' w='16000' x='84000' y='91374' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WURStory' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
            <zone h='83610' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15975'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Score vs Quality' captured-sheet='ScoreVSQuality' id='1'>
                    <capturedDeltas>
                      <worksheet name='ScoreVSQuality'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[Latitude (generated)]' field-type='quantitative' max='31334757.82607878' min='-29568109.758733083' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.13qihaa0kqs7ty121ln9c1mggin9].[Longitude (generated)]' field-type='quantitative' max='37600285.440053403' min='-26835878.279449817' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Ranking of various Features' captured-sheet='FeatureRanks' id='2' />
                  <story-point caption='National and World Ranking Comparisions' captured-sheet='WorldRanking' id='3' />
                  <story-point caption='Number of Students vs Student staff ratio' captured-sheet='Ratios' id='4' />
                  <story-point caption='Scores of universities by different sources' captured-sheet='GlobalScore' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='ScoreVSQuality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:score:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[usr:Calculation_1362057415828332545:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='FeatureRanks'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='WorldRanking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' type='filter' />
            <card param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year (shanghaiData.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:national_rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:world_rank:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:national_rank:qk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country (timesData.csv):nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:institution:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:world_rank (shanghaiData.csv):nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:world_rank (timesData.csv):nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year (shanghaiData.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Ratios'>
      <cards>
        <edge name='left'>
          <strip size='178'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:student_staff_ratio:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[avg:student_staff_ratio:qk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country (timesData.csv):nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:female_male_ratio:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:university_name (timesData.csv):nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:university_name:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year (timesData.csv):qk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:year:qk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:national_rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='UniversityClusters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='13' param='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' type='color' />
            <card pane-specification-id='13' param='[excel-direct.41984.551960740740].[sum:result.cluster:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41984.551960740740].[none:university_name:nk]</field>
            <field>[excel-direct.41984.551960740740].[sum:result.cluster.1:qk]</field>
            <field>[excel-direct.41984.551960740740].[sum:result.cluster:ok]</field>
            <field>[excel-direct.41984.551960740740].[usr:Clusters (copy):ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GlobalScore'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[sum:Calculation_1248904474381946882:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[:Measure Names]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:country:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:institution:nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:total score (timesData.csv) (copy):ok]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:total_score (timesData.csv):nk]</field>
            <field>[federated.13qihaa0kqs7ty121ln9c1mggin9].[none:university_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='FutureTopUniversities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[fVal:sum:world_rank:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:female_male_ratio:nk]</field>
            <field>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name (timesDataclean3.csv):nk]</field>
            <field>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]</field>
            <field>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:world_rank:nk]</field>
            <field>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:year:qk]</field>
            <field>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='WURDashboard'>
      <viewpoints>
        <viewpoint name='FeatureRanks' />
        <viewpoint name='GlobalScore'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ratios' />
        <viewpoint name='ScoreVSQuality'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='WURStory'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Forecast Dashboard'>
      <viewpoints>
        <viewpoint name='FutureTopUniversities'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nia1jd08pg31b1duuwl70l0f3xc].[none:university_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='UniversityClusters'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.41984.551960740740].[sum:result.cluster:ok]</field>
            </color-one-way>
          </highlight>
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='FeatureRanks' width='192'>
      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
      j02IxgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecast Dashboard' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='FutureTopUniversities' width='192'>
      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
      /39brLV9W8XiHQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GlobalScore' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9WYxcWZqY990t9jUjIvd9IZnJXEjW0lXsTT2LZiyNtUA2LBsQoCfLL9KT
      F1jQw8APhiFYhgHbsOwHGxAEDbS5Jc10T890zXRPVXUtXIo7mUzmGpmRGfu+3tUPSVYxM26Q
      rKpsklV5P4AAM+6Nc/645/zn/Oc//3+uYFmWhYPDKUV81QI4OLxKHAVwONU4CuBwqnEUwOFU
      4yiAw6nGUQCH15wqf/D//Fs6hsZP/tk/J9/54opWOeDOZvqFS2oVd3mQzLJ++xOKrcPP5BOW
      1sHhxHniqbcsi/L2dd67t4fW6vBb3z1PvuLm53/2S763NMynKRE5c4dkGf7Sb13i459+ytDi
      PI2d+9SVKG+dG6Csuvn0D/6A0YsbBIZXnBnA4fXHskywLHQTtHoW7+gK46EmmUyW/UoHs7jL
      n35wm5C3wnu/vI/WyJGtlMlWZd5amaZeq9NutmhWsuTqMhfeXOLN3/5PyD+64SiAw+tOgOkx
      gX/5L/6AzsAUMZ+HgM+N1x/E5fbg93o4vzjDw/0GZyfOMDsZwBWI4Hd5GB4dRjF13P4g1VKW
      hiHjcynEE33cu/oJPzofRHB2gh1OJVqVn/67nzkK4HC6eekmUL1ep9FovOxqbclms69aBOD1
      kaPdblOtVl+1GMDLeyaneg3wukx+r5Mcr5MsL4NTrQAODo4COJxqXjsFKO3uUgfUYpJkof2V
      yzHNFqlU/it+uc31j97nL97/lHJbfe6aJb11n49uPHzmPandXcznVLu9tYGqm1QqWSqVzpFr
      5XLpRSR/jEm5XEFTW3S0Z9dqqE2ufvRLUk+2Rm3QOzWuffQ+739yC/0p06Se22G/0jmsq13l
      419+QL7R6VkOgKm1qdR713VMOB5t7QCwu7t37FKbauMFywF0tUWt0e5qy9duJ7hTrWIBUrtK
      xexj5+FtDuoiF5fPUS9lKVQahMNx+qNeSk2N8t46Bc3N8sIktVKVXF1nKGBwb30LT3iakZGv
      IEQzQ8GI88O3p2mU9/npB1eYv/Q9+iiSLOosXVikur9NMl1icmqCTz+7zcCZNylndniwXWD5
      0jJqtcRBvszMWD93bt+jqikMjo09s9pKpczAKHQ6TQTBw+76FvvFJvPLS5TLJSzNIBiPUykW
      8Igad9f2OLe8jNEskytUSIRcPNzOs7A8T7lYYeP2TdKtBJeWp4gMDKLVSnh8YWRBY/XubcTI
      GN5akmSuytiCANjZ3Ra5nQ3iZ99kNKig1wtcv7vGwNQC4U6FuhVHbVQ5KK2RLgnMaQ2uf3qD
      xOQ8fW6LajWPKUdoVVOU2x6W5xJUmyJGLc3qdp5zy8v0+d32D8QyKZYPF+XVapVOq0ZyY4OK
      6WdxOk69pdNptIlHPZSaJmopSaoqsjQ/RqVYodDQ8ell0k0Xi9MJqpUaV65eZXTqPGcm+gkG
      3a/fDGDoVT768z/n/U9voRsm9VqV7PpN1tI17t27R3xojPTeFvlCmnpLpV6rktx8QHJ3j+t3
      kowP+HmUqrG8ch6P9BWF8I+zPCrw/gcfo3kTnDlzlrMT/dRrNbKpTR5u7rGbKnFmepxircnM
      mXmWpxKs7uRZmh/lzq07rN65RzQ+yPrqQ6YXL9Af9rxw9ZZlYaGRytSZHoyRK5fJ53K061ky
      2TSpdIWrH39EPr/HtZuPeHjvHqH4EHs7m0huD4Kgk8tVGJueY2lliZjfYu3RDnvJfZAEcjv3
      EWOzGAfrCIlpFleWSYR6dEKg3TAIR7zILgWj06JarXL1+meP1cUgny0xND3L8vIyqUcPmZg/
      T2H7PsntDTIdF0GrSVMOMijXyVaqFOttWo0atUKS6/eTL/xMWtUiHVeUqFqj0GpSbrQ52Nsi
      l0vTqOzzFx/fI/noPtvJHa7f2WNsIMRGMoPX7aLdbFA3FKZn51g5P4uk6CQfbbx+CiDJIS7/
      xm/wg++sIFo6labK1FgCXYfEyCR9AQ/Tgz5uPMyTCFsUVS8TI/2Yus7o9Aw+t4LZabCf2kc1
      vqIQrSKZpkB/2EdbN2nXCmSKGXJlk6nxUTA1AuEoPq8fRRaQFRmXy4VodNjdPUDx+AglRhiK
      BZEEk4O9PapN7bnVRj0i9x88YOPRHpLPRSjSh8/rQxIPu1qif4CHt+8xND5EMBJjcmaBs1P9
      h3X1BRganUQr7ZPMlhEASRQ52N1D98Yxc+sYwT5cooDsclPOpii3LTyKjKIoSKLQQyqB2HCE
      B9du8mB1k2wmQ3R0kqDnaNeRpMNy/B6F/b092qaEpPiZnR5BFBWifRF8Ps/nc0w6V2JiagLZ
      eoaJJsq4OhXuPrhPrtICQaYvGsbvdT8uR2BywMvN9SKJRJT44DDnF5dIRDyMTc/i93iZGBsi
      vX6fsg4IAqLWYvcgT6lssVnj5W+E1et1BEHA7/fbXtfabQSPB1Fr0bFcdKp5VEskEIoiWgYe
      jxvL1KhU20QiAUq5NKrgJhLwYQkyHrdEo1qi0tQIh6P4va6esmQyGQYGBrovmDrZbAZT8pKI
      RWlW8rQFL26zSVOXCIcCCIBLkdEMA8s0cbvddBpV8pUW/YP9mJqGx+NG7zTJ5Mv4gmEiIT92
      3eyJHJapkUlnkX1hYhEfnbaGS5bQLQtdU/F5vVQqVYKhMHqnTrZQIdSXwCVaeDweWrUShVqH
      RH8co6PhdovkMkXCIYVPr99n5Z3vEvVIWKZOIZsFT4i+oBfNNHErCq1WC1VVCYfDR+SzLJNK
      IUfLVEhEPGTzVbwBP0GPjC64MFUVt0fGMEQUySCdzuGLxPBKILndoOsYgoBo6JiiiGEKoNYp
      N1QCwQhBGxPoyTPR2nWy+TLh+ABeGUxE0DUsWcI0LVwyVKsqkUiAWilHpWWSiEewLAmPS6SU
      z9K2XCSiAXRLQNRbFGoa1NM0g+OvnwK8THoqwLdMDss00AwLRZFtFfAJvRTgVfDrfiamYSCI
      4uu3CHY4eQRRwvXaGbuvFlE6XCC+Fo9F71QpVTuATrlce3WCmDq5QhmAarnMV11CnATV/B5X
      rl6n/Jy1Q7lcfk5JKuVy80vVbbXLlL+6B/qFqeb3uPtwB/Mr2iCWqfLg1nXub6SOlWGx++gu
      yWzvsI6WAYb1mrhB1UaO3WKUaMjLfiqH3+dCVVVkt49qNomnbwyfW0KwDCwE2q0mssuLLIGh
      aSDJaJ02kstDPb+HFAqwtVZhfmEMRZaRJAHDsJDl57iFzA6byX0SsQi51D5KMACdNiYykl6j
      pHuIBz0osoRmWJh6B90U8Xld6JqOblqIlo5mishmg2JbJLO7w9zZs7hcCoosY+gG0nNMEaNV
      5N5mnsX5M2DptBodDEHG73HRbrcwLAEJE0HxkNrbQ5YkXB4fkmCh6zpmu0Je9zMcdtFsZ0nu
      CQQDCs1WG8XtRRFMmm0Vn99vv/itptgXwviEDqqq4fb5sfQOHdVENpqsHZQ4OzPNwf4uIcui
      4HIz0T+AJIgIloHarLKWynF2dgYJg45m4vN5EQFVbdPRLHxeifW1JMMLS898Fs9i495NPP2z
      WKVttg68jCdCiIKFrhfZPtC4OOqm1ahjSS48LglD0zAECdHSSTdhKOR9PRTgKBYPrn1MU/Zg
      iBEGlAqGKLDTCRDspGnqOvfuPUQJj7Ew7SezX2doJMqtW2ucvfQu3moWU2+xs7NHJOaiVm0x
      0y+ybwxzZvjLrTsKqQ02tnPoLYPzi6NUBUhvrTM7kSBd77B65To1y8Vv/O6b3PrzVcaWp0nd
      u4USm2J5OkKlqbO7m0TyBJG0GmNzcyS39lk4f+aZjd4oN0mMDhMMBkFr8sEvf8FersUPf/OH
      3L9/H6vewD+cwDSChMQaa6v3aFp++l0tMh2B2bhCWZmkuPEZbcHCVCZYvXWFmmHS1mME9W3W
      98tMrvyQ78z32ijpcO3Dj1ACImJgmlbqNg0pzsJ0kJ2tXSJ9A+TzaTTDYKtt4LLatBoB/LU9
      6n0edraShPtibF/9JQc1k0s/+h1m+xSuffopggiB/inSmRxKf5n+cPArKUHblDgz0AfeDqu5
      MquZHUS3h5BfJ18okNx8SK5QxdI0phfmWL+7ysT8AulHq1iJcYZCs6+HCSQqblq1Eu1yhoap
      4A0PcOntd4h6D40Qd2wMtbBDXVewWhWmFi6yNDuKJXpYeeMtxoZHWFyYpZA9ACA6MMzU5BxT
      42OEFZVr6yWmh16g84sStBu0NY1cuYIkephfuci50Tg6AAJDUYV72wUGAhZ6cIx3Li3hcYkM
      zSywMDXGuaUlfGaJUgtwBZmemGD+3Axnpwe5ee0zfH1Dz33ovqCHQjqHpmuU8gU88VGm+yUq
      TZGJMwssTU9x7o1LxP0KgifEysULeAQVS/Ry4a03ifpdWJaFoQS5dGEerySgij4uXZjHjUCl
      afDG2+8wHPU+U47w4ARvvv0WXnRmzy0QV6po3hGmZs8w3h8CRAZHx5idXyTmlzFNk1q9TqR/
      lKnZOSYGPDT0AO+8c4mIx42hdVCCA1xcnqLVkpk9c5Zzs2P09MA+BwWdQrVJPp/H4w0TUgxK
      bRgeH+XMmfPE/AJDM0vMxBWqqsj0wgUmBhR8kSlmpicOm/yrVX2yuANDJFwVPr2XZ+HsMLH+
      BBKQ6O+nb3AUjyQxMRgmOjTOmYVl1NIBlY5JLJbA45bAMijkCwwMjxAdHMUrB/GQYW03R19I
      wR0ZQn6Rhyy6OTc7wJVf/Yqh2fOEQmH8boVgfz+hYB+xoI/Y8DiRcIRgbJrFEZG9XBlJDDA0
      dOg5aVaLGL5+BuMREmE/I/1Brt+4h6pEwBQYGww+VwzZH2Om381HH11B94ZRtCaexCyJqJ++
      YIBAfz9eROL9fQyEXXz4q6sMTZ+hf2gQjyggBxIMRn2M9Hn45PoG0XiYmMfk5+99QEdSWFma
      Zy+5hyX1MAD8/ST8Mv39fYBCIhGh3ahSl2OMxP1IjSzr+yVGhkcJxGMUHt2nbkVpl9dp+qKE
      PF7kVoFHqQ4riyMk93KIkoDijzDoN7hyt8jSwjCx/vjjDmiR20/RaZbZzddfrNMAswuLHKx+
      xkHbx3S/G6V/jqWJKLWWTH9/gPjILO39u2SVEWYTIfrCfiQ5RlDOk9zcQRZew32AE8XU2Nzc
      ZXhyEo/cresv0w1aOtih4znsmC9dDssis7vObq7JmfMLhDyK7W2nyQ36hFeiAKVSCZer9wbV
      y6JWqx3a2Y4cAOi6jq7reDwvHrbx6+JlPZNXsgju6+t7LTbCgNdiIwxeDzlepxkAXs4zeS3W
      AA4OrwpHARxONY4COJxqXsONsEMe5R7y84c/tb32d9/+L/G5/LRSf4DR3uu6Lvvn8Az+jV+3
      iA7fAl5bBcjVM3y4+Re21/6LN/4uPvxo1c/Qa3e7rltm21EAhxfilSnA3/uf/4hmuzvQ6298
      /xx/64fzr0Aih9PI11cAy6RcyFLXJIYGY5SzB9Q7JvGBAUQTPG6RRksl4D+6AVRtdmwVoKPp
      X1skB4cX5WsrgNqsksoWMNQammWyv7bDwPgQltVkc7NKzFuj7h1m1t+9A/pN4ePtD8Fmv3Ci
      b4rh8OgrkMjhpPjaCqD4wpybdfHwwUOiHrhTLUHex8h4nIONW+QHpvjB21FM08QwDHT98Qjf
      Y//ZMAxUVUXXe0fja5qGKqmYpn0+qWmaqKr6XNmf1PU8/vf3/wmWjcB/+8Lf4XfP9T/3+ycl
      x6+bJzvBL0OWTr3Nh//0Z7bXFn/vTaS456XI8bUVwFLr3F/bY+78Cgo6v/07v00rv8XaRpqh
      mSWMxgHltk7UKyOKIrIsIwgCveJfJUnC5XI9M3ZfURRcLhdtUbQ9a0cURVwuF61Kkwc/v2Fb
      xuz3z39e11fly3z/wXs3aZW7zxfqm+jHOx56LUJDDMPANM2XIosp66gN+6wbAeFrt82L8rUV
      oF2vkkknyeWzzM0vUEg+pNKRWH5jiUaxzeDMAlsHGSJTI1858eGrorVVdm9s2F4bXZmC0Fc9
      N+XLk36wSzVtd7iVxch46IXK+PHtf8Wt/W6FHgoO8/e++/e/poSnk6+tAL7YCL/1218kVYwN
      Jj7/f9QXAGBu6vWILfmmc1DdZy37oOtzVX/x/MWtTx7y8Be3uj4XRJEf/IO/+rXkexX8N//+
      71PvdKfR/u78f8xfX/pbz/3+a7sP4PDrQdd0OvVuhRG+albKK6baLlOzUYC2/mLHJjqhEA6n
      GkcBHE41p94EKlSaVJvd7jZFFhlNvNji1OGby6lXgH/zF/f56SfrXZ8P9gX4v/7r33sFEjm8
      TE69ArwumKaFbthv7MmyiCh8MxeprzuOArwmrO0V+O/+6Xu21/7xf/VbnB2Pv2SJTgfOItjh
      VOPMAA5fmgfpu/wfH/6vttf+0V/+HxgMDb9kib46jgI4fGlUQ6XYtH//mm6+yiOFvzyOAjh0
      8b/8q48p1bp3i99ZGOGvvnvmpcnxZ9c3+eXNna7PvS6Zf/h3vn8idTgK4NDF6k6eTKk7cnWs
      /+Xui6SLDW5vZLo+DzzjrT9fFmcR7HCq+foKYJmkk+s8eLSNbloUD3Z4uJXCRKdWa2EaGqVy
      7xcVODi8Sk4gJbJGw5TxUGLjkUmxVifmbrKVVmgX2oTlEkZshuhJSOvgcMJ8bQVw+cOMYLGx
      USUaduHqG2bIC1v7eQ42HpHtn+RHZwOvJCVS03q/XkjXdTDA6LH7alnWc1PyvkwqY68ziD9/
      LlrvM4qfpCn2/L0vIOsTDKPHc7W+SIm0S/8EMA3zcdv0PrhA17UXkuVZbWPoBqJh9JT16bbp
      dbTzi7bN11YAo1Xh0U6Os+eXsKoH3M82CAWaiO4gQzPLiJ00uZpKIuh66SmRimJ/DDiALMtY
      koQk2VuBgiA8NyXvy6TtCT1CGURRRJIkZKX375Xlx+8hFu1lFV9A1idIUo96hMN6TNNE6NE4
      oiQ+bpve3UaWlReSxVR6K5EkS0iS1FPWp9umV4TIi7bN114DqO0m+YNtPnz/fQpmkJCW5+G+
      xuRoglgsxJnFReqlQq8B/1uBZVlYltnj37f5l3/z+dozgDc6xI9+c+iLD2JvMPP4v4ODhy9A
      nhp/PY5C/3XRyf0xze3/zfZa9I0fg/Tqz9t3sMdxgzqcapyNsG8RlqnTyf7E9pocWkH2Tb5c
      gb4BOArwbcLSaCb/qe0l3+Q/cBTABscEcjjVvJACtDsq2Xzh1y2Lg8NL54UUoFqt8X/+v/+S
      3VTaces5fKt4pgLki2Uerm/zL/6/n5LJFfi//9m/JpNzZgKHbw/PXARrmsY//9d/SKFUZmZy
      jL/9N/8jQoFvt0/f4WRQy1cxO+muz0VXDFf08iuQyJ5nKoDP62V0ZBBV0/jtH77LyNCrf5et
      wzeDTvanaOVPuj6Xg0vfHAVIpTP8Z3/9d2i22r1jSBwcvsE8UwEWzhwGNUTCzglpDt9OnH0A
      h1PNC+0EZ9ev8SdXCsxOh1l56218PUKIHRy+abxQT16/vYqmaRS2k1TMY/sAlkV+f5NUoQEY
      PLp9lfc//IhctU6pVMfUO47r1OG15YUUYPHyd6C5SyM8woB89CtGp0FLUCml62A0qBoR3n3n
      bWJB2N8vsLN6F8PluE4dXg2W0cHo5Lr+mVoFeEETKHeQwReNUtzeoma+S1j6Ig1H8gQYG0pQ
      LeqgGZTyW/zqoxxLl+Y52LiN1D/Jj8Keb3VKpPGMFEFV0xAM8aWkRFrmM9IMn8j6klIizR6/
      13qBtjnJlEi9/BHt7X/cdV0Kv4N36r9/MQWYufg9Zi7C+z/+d3RMC3p4RDXLxRvfuQy1PZL7
      BYZmlnEbWfZLbYajnm9tSqT5jBRBl6IgSK6XkhJpGQbdp/kclfVlpUR2BAG77is8bpuXlhLZ
      Q9YnfeSFFGDjxodcfbiH6B/gnWMdRm2UuHb9Jk1VxB9bpp3ZoKh6eOPSNLVSm77IIPvZMlbU
      89LfEung8DyeowAdrr//KzL1NqFQCBBRsXA91ZVd/iiXf/CbX3xlMPb5f93xQy0dHXZ2kB1e
      T56jADKj03N483t8evUOmhXmGaaqg8M3jud4gSQGRscorj+kaUToH/AhOwrg8C3iOQpg0Glr
      DExOMzEssrGVp/fSxcHhm8dzTCCNj//kD9kqtekfGec//zu/Q8TZBXb4FvGc3uzhh3/tb/Gf
      /s2/wlhQ5Z/8o/+Jg2f45x0cvmk81wv0wU/+iGRNo39wjP/2f/yH9D/DP+/g8E3juV6gt37z
      9/i+p/dGjoPDN5nnKICE1+uM+A7fXpwVrcOpxlEAh1ONowAOpxpHARxONSfwkjyLYnqHdKkJ
      WGSTa9xe3cZEo1xuYOoq+ULp60vq4PBr4Ou/IqnToKbXqRY8xOQamwWDIV+ejX0vaqlNRSgi
      DZ07CVkdHE6crz0DSJ4AE6ODiEC7rjMwmmBgZBK9XuJg4zabVZnRqBfTNNE0DV3XD7OBvm5G
      2LMypF4wI8wwjOdmhD0rK+xFM8JUVX2BjLBnZVm9WEaY+qwsq29YRpjxAhlhh8+1Rxmf9yN7
      WZ/0kRN9P4DbK1DcrxEMNBA9fQzNLKPoGdKVDoNht5MR1kNWJyPsmKyvW0bYszjMCLtBoyMR
      SFwkLmZZL7h4YyVOKd8iHh1gL1vCCg86GWEOrx0n8J7gKJd/8FtffNB/gYkn/+0/1NLxkcGv
      W42Dw68Fxw3qcKpxFMDhVOMogMOpxlEAh1ONowAOpxpHARxONY4COJxqHAVwONU4CuBwqnEU
      wOFU4yiAw6nGUQCHU42jAA6nmhPNBwCDB9evcFDTWLx0EVG1iIZdZIp1hgfiJ1uVg8MJcLIK
      YNRpywP86C9NI1Dn3r0i5f0cwanlE63GweGkOFkTSLco5zf55S8/IFtVOdi4TbLhZiDoclIi
      nZTIw2q+zSmRmimzePFNhMYB++kiQzPL+MizW2gyGvOhOCmRtrI6KZHHZP0mpUQ+jez2UNm8
      TVH1cnFlgnqlQyQ0TDpfBnwnWZWDw4lwogogiDKz5y99/nc0ejgCDw0kTrIaB4cTw3GDOpxq
      HAVwONU4CuBwqnEUwOFU4yiAw6nGUQCHU42jAA6nGkcBHE41jgI4nGpOWAEs9jfu8umtNUw0
      CoUapt4hnc2fbDUODifEiYZCqJU0e00vk6Eaj3bz6FWV8n4O/4QTDu3wenKiM0CnaZIYDBNO
      jGK2Khxs3Gan7mYw9OyoSgeHV8WJKoDbJ5LLVKjkUojeMEMzy0wEOqSKrZOsxsHhxDhRBXCF
      BhnxNEnWfMyNxhgc7GNqYRk61V75Lw4Or5STTYkUBEZmlxh5/Gcsdmj6jAwNnGg1Dg4nhWD1
      ytU7YZ6k/jUaDWq1GoVahycZfqZlIgqHk1HQ7yLgUegYHcqt4uPvWgiC8Hn2z0BwEAERS8tj
      mR3gMNVOeJwxJYhekKNgQbNUP7z++Gc+yczyhn002y0MQaHR0rrkkCWB/qgfQRA4qKaO/I4n
      mVkhTxiv7EOwWphaqUsOAMk9ggW0yg3Mx+mXT5chuxU0dNxeH7lS87CMx/Plk8ysRNSHLApU
      OxVaWrO7DFEh7k8gYGF09j+v+2lZRCWKJXgxOjqdRrurDABPxIeu65SbOoZhdT0Tv1ch5HOh
      mRrFZv7xdQvhqeeaCAwgIoJewjJbNm3jRlDiYEGjWHssqIVlWZ/f4wl6aaltLMlFraF2ySGK
      AoN9fgCy9TSm1f1cA+4gfiWAYHUwtcJjOazDPiQIn/eRl6YAT6jX6wiCgN/v//wzy7KOpAxq
      mnYknfF457UsC8MwjqTmfdkyADKZDAMDAz3LMAwDQRCOdJIvW49pmpim+UxZ7eQ4LqtdPU9f
      13UdSZKOPKMvW0ar1UJVVcLh8Ff+vScl64u0DXAkbfLLyqpp2kkfi/LVOJ4v+7y/v8p3euXk
      ft17XuTvLyvLr+v3nsQzeV3a5qTqlX7/93//959b+wmiquqRpOZcco2ffHiTgFlF9ybwucSj
      yd+myu0Pf87DikgxnWJosL9rVG6UDvijP32fgFUnJ8bo80lHy7AsNm59xJWtMpXcPsNDQ4ff
      azQIBAKHt+g13vvJH9PUTPJtgf6wD1EUjzy09OZ9/vTKfZROGSmUwCMfl7XNjb/4GetVmVI+
      x2B/rEvWam6Xf//eR0SEBiU5RsQjHZEDy2Dt+gfc2G9RSu99LuvTZejtEn/y059j6h1ymodE
      yNMla2rtFr+4tYlVz+PvG0CRjsqB0eLKn/+UZEOhVK4wEI9+flKGx+MBoHSwxY//7ApxqUFN
      iRN0H/u9ls6DT3/B3bxJcX/HVtZOPccf/+zPUYwmGTNMPKB0ybpz7xofrqZol7L0JQaRROHo
      MzEafPCnf0yuJVKotxnoC3UNLPndR/zRBzcImlVUbxy/TT+689F7rJZEiuk9hgYHDt9bzStm
      P1tAtFSq1SqSqoP/2EkAWpNSo01DqqPq9mce1Ep52oZJo1GjUe9A7Pi+g0U6X8J0SeSbPVyy
      jRwlVcRfr2ISsL0lmS4i06FcrRDWDPAck7VTp9LSaNTqaIL9sR+lYh7V0Gk0qqgNFSLHTq4w
      dbKlKqo3QKFTsy1Dr+WoalCv12hLLSDcdU8yXUQyLUpllRHdBOWYw69dptYx0ao1Oi77bpDL
      FzBMjXq9CmEVQsfu0zvkqw3aZgOtXbUto13JU9csGo0adVcbBroPR0hlCwh4KZQNTNMC6djo
      3ixS6VhotRpSj8MkDrIFsDSqtSp0dPAfk1VrUaq3aAh1VO2L5/rKZwC3LKJIMt7IEGNDfYjH
      ZzZBBFHEJVhMz54l4O3eVJMkGVkUwd3H/MxQ1/MDkGURWRAYnZwjEjxshCOjjORCABTFx9m5
      Cdw2x7J4ZJBEmWB8lOH+aLesooSJiFuEmTNn8Hu6j2VRZAmXJCN4Y8xNDCAJx+QQRCRRRBEs
      xqbPEg54usoQJAVBANEVZGF2DJfN0S4eWUASJfoGJ+iPhbqPDxEVTEHEJYnMzThhukIAACAA
      SURBVM3ic8tdM4Aii7gVGTnQz9Roovu5CuLjUdRgcmaekN/dJYcoKUiiAEqYhbkRlK6HBi5Z
      QBIkBkamiUUCCMefiahgIeCSFc7MTeO1UVi3IiBLMt7IIONDMZt+JIEg4RJMpubOEXzcj175
      DNAo5vDGJ5kbjtjfYBmks3VW3rqEt8fZOVqzgi6HWZqf6HlOTDGbZ2j+EolAdyMBYLYpVC2+
      ++68rQIB1PIZgkPzTCXsZwgsnYNck7fefQOXTUMDtGtl8MY5NztsL6tlks8VGVt8gz6f/blG
      pt6i2lZ4581z3Q39mEouQ3R8mbE+bw9ZNQ5ybd797hvIPcpoVQoooUHOTPbb34BJNltm7sIb
      hDz2XclQ6zQNL2+tzPWUtZzLEZ+5wHC4W9kPZVXJlDS+e/liz7ZpFPN4Y+PMjUR7yGqQyVVZ
      fPMNfE/1o1c+A2hqi93tbTLFCuFIHy752GhmmtQqOXZ2U9Q0gUQ02FWmoXXYT+2SzuZwB/vw
      ubsbo9UosbO9S67WYSjRBxwbZXSNTGafg3QGUwkQthnNNK1FcmuLTKlGNNqHcnzkNQyqpSw7
      u/s0DZlYpFtRTL3N3m6STK6AN9iH13V8DWDRrBXZSe5RrOsMxm0GBl0lnU5xkM4geEIEfd2z
      otppkNzaIltuEI/1HY7CRwWhXMywu7dPx3LRF/J3zQCG1mZvZ4dMvoQ/3Ifn+ABkmjRqBXaS
      e1RaJv2xblPM0lUO9vdIZzJIvigBm1mx06yQ3E6SrTQZiPchCsfXADr5fJq9VBpN9BANdiu1
      rj3uR4UKIbt+ZBnUKnl2kimqKiSiIeA1CIeWMJE8PkxVRbA7pU0UMQ0Lv1dGN+w9tqIoIkou
      LLWDqPSY1EwLj8/b+8hFxQUmKIIBPU6Lk0wDyevH1LQjvv4vbpAwDAu/R0Tv4V0WBAFJ8WCq
      bUS7GU0QwLTw+dxovY4xlBSwRCRLR+hxgp5oGig+P7qm23tZJBlDt/C6BIxeJ8EBktt7KKtd
      PaKIZVgEfC5UvcfvlSQEQULQVcQep7QJlonL6+195KIkYxkWHtnC6jHFS1iH/Ujr2PcjQcLU
      LfxeBe2pfvTKFWBze5/Z+QUirhb5qs05nFqdTFNiYWGB7P62bRmlbAr/4DTzQzKP9u0Wyhbb
      ByXOLy9TLezZC1Lbo+4e5fxknK2Uffj26uYB55cX8VpVKk2bRW6nTF71sXB2jvT+rm0Z2YN9
      YqMzTMUEtrM2C3JTI5lvcn5phXJ2x7YMtZJCC4yzOBFmPVWyvWdtK8PiyhKiWqSp2ihSq0DR
      CrMwN0lqP9V9HUil9hmeOsNwyCBVbHffoLdJlXUWli5QTG/YltEoppD6Jlkc87GWsl8obyTz
      LK4so9WyRzrn5zQzlMUECzPDJFMZ2zK2dvaZPjtPn7tDrmLfj9INkYXz58nvb33+8Ss3gWJh
      Lw/XNjFdEWbG+xGPa7jkQeqUSKb2GZqcJ2Jjw3sDQbLJTbIthZVzY8g2o0TIbfFofZu+4WkS
      j02TI9OsO0Inu85+WePsmRnb9UZ/xM29BxtI/gSTI7FuWWUvQjPLbjrP2NRZQr5uWYNBP3vb
      m1Q0D+fnRpCOT/eChE/qsLG5TXzkDLGwv6sM2ROint5gv2Jy/twU7uPTPRAPKdx7sIk3MsTo
      QLR7FlD8mNV9UrkKE9NzBL2uLhMoHPKxvbFJEz/npoaQjpchKnisBlvbO/SPL9AX6jZNXN4g
      pf1N9msCy/OTtovgqF9k9eEmwfgYQ/FDF+eRZ+IKoZeS7BcazMzO4nd3m1F9YS9ra5vocpjZ
      Cbt+5EbWyuzspRicnCf62LnwymeAZCrHmfOLJHwGxbrNqKrXKWlulpaWqeTtR6pqIUNkZI7F
      UZ/9qIpFKtdg6eJF1FrWXpBmho5/gpW5IVIZ+1F1M5lj8eIFwkqbWstmularVKwQS+fPUcyl
      bcvIZ7MMTJ5ldsDFXsFmVLV00mWNpQuXaFUObMvQahmEyBQrM3F2Mvaj6tZegeVLF3BbdVqq
      zRHCnRJ1KcbSuRnyOftnkk5nGZubZ7xPIl3udN9gdMg1YPHCJRpF+xmvWc7gTkyzMhVmK123
      vSd5UGb50kUEtWQ/A7TyNN2DLJ2dIJ0t2Jaxl8oyt3CewYBJoWbXjxoUOy6Wlleo5r+wAl65
      Akh6g7WNLbaSB/anHwsS5fQuW1vr9goCCBhsb22wuraF1MtTVMuxvrHBQd6+EZAUDrYf8ujR
      Jpplb2fKeo3VR5vs7GXt1wCiRDG1xdbWJpWWvf0uWipbm5usre8g2drvAu1Sho3NdTKlHnsW
      okRqa42HjzZ72sRip8LD9U12Dwr2awBRJre7wdbWJvWO/bHrktlmY3OL9Y1de1kFgXphn+2t
      dbJ2ZgcgiAK7m+usPtyyX0cAVrPE2vomqUzFXlZZJrPziI2NTdo91hqS0WRtY4vNnf2e/aia
      3WNrc51C/YvB6xXGAvnotFpILjf51A66J8pw4qhv3bIMWm0NRdDZ2T1gYHSSoPfo9Ke1m1iK
      h0Z+n5IqMzE6eMxVZtFstnErIrvJJIHECPHQ4T7Ak3gTQ+ugI6E3yhwUG4yNjx0zKyzarRaK
      y01mdxsCMYZikSNuTNPU6agGsqWyvZdheGyiax9AbTcRFA/V7B4108PYcD+S8HTci0mz2cEt
      CySTu0QGxz6fqp+gq20MQUGt5clUVCbGR455oyxazRYut4uD5DZyuJ+B6NF9ANPQ6OgWotEi
      mcozMjGBzyU/FQsUQm21EFxuyuldmmKAscH4MTfmoawuyWInmSI+MkH4mDdK77QwJDftcoZ8
      w2RibBj5SCEWzWYLt0thP7mDOzpI4vE+wOdto6tohoCl1tnLlBmdGD9mnlqf96PCfhLVFWak
      v6+7H7U0FNFgZ3f/SD96dTOAoXHt2g3UZo7bG3mym3fJHhvhO6Vtbqxl2Lp/izYi12/e6Srm
      xpVPaasNbt3fRM+usZo5Nmq2cnxya4PS/joHVY0bn93oKmPrwS3SlTZ3b36G2S5ye/PYQktv
      cfXabbTGAXe2S+yt3aF0zASqZza4t1Xg4a3r6AJ8duehvaydKjdXd2kfrLJ53ARqpvnk9g6Z
      nVXybZPr1z/rKmPt9meUmm3u3LqLVT/gdvKYuabVufLZfdqVPVZTNTbu36JxbBFc2HvIo70y
      Dz67hino3Li/ebQMC65fuYLaLnFj7YD63n12j5tAjRSf3E2RWr9HzRC5dq1b1jvXr9LotLh9
      ZxWrtM3d1LGd7U6ZKzfWqOe32cw2uX/nJtqxF5akN++zk6tx78Y1LKPBrYfJo2WYOteuXkdt
      5rm1nqWwfY9M7ehspJV3uP4wzfbqLVqIXPvs1ufXXp0CCCIuQePqpzeZW1rE5xIOt8GfQpS9
      NHPbJCswOz4IRvc0G/DK3Llxg/DILLGgq9uGlFxYzSJ31lKcmz+DZHXb7l6vm9T6LVqeEUb7
      /OjH3Y+ChGx1+OTjWyxcWsEjg9lVjYdKep39tpeZ4RiWjaw+l8it6zcYmDpD2CfT5ZGVPOi1
      DKs7Rc6emUE0u00+n9fF5oObWOExhqNedP2Y+SJISEaDq1fvc/7CEi7J6nqLiuLyUEw9JGeG
      meqPYBrd9XgUi8+u3mTizDwBj2Qrq1raYz3T5MzMBILRvUYIeBVW79zEFZ9kIOzpbhtRQVCr
      3Li9wcLyAopgdCVOuTxusjv3qUgJJhIhm7fGCLhFg2tXbjKzeNiPjr/0R1S8tPLb7JRM5saH
      j/SjV2oCmbpOR9MxTJAsA5c/cMR8sSwLrVkmWegwM5pA001crqNmhWUatFptJFmmmM/TNziM
      Wzo6zWpqBwMJlyyiqjoez6F35sk0a1kmnc7h64NEAQTZjefIdruFoWtsbe8yNT2NoanILvex
      adZCU1topoTRLKMrQfpCR+NeTOPw97oUF4bWQXJ7kAThKRPIQlc7qLqJIEoYuk4gcNQLZJkm
      jdI+RTPKSETBehIGckzWZlvDJVsUK20G+o96rCzLRO10EGQXkmWgcxjy8LQJZBoGHVVDNy0U
      DGRvkKPOJgutVWMnU2VmYhhVNXC7u9um3W4jiDKVYp5Q/xDeY6alrqnopoBLkVBVHbf78G06
      T7fNk9dQCaIEooz3SD0WpqGTTO4yMDqBbOpINm2jq21UQ8BSa7TxEY8cPtdXGAohIMoKBw/v
      8OHqAZfnYngnLjES/sKOFAQBl8dL6uFVTOMckXCE/r6jD1kQJcoHazzaKSPLGiktxJuTwSP1
      VKp12tU8hVoHwRNm+ezk0TIEEbdV4d/+4S+YOnsO3ZvgO+dGjpQhyS5crSwf3VSZGupjoD+B
      +JTtLQgCLqPOr27vYBQKiH39/Ma7l47UY3QaFItV8oUiiBIT02eJ+JUj9ciyxM1fvceBa5yw
      WeUH3//esd8r4nYr3P3gU1g6QziaOLZrfSjrzWu/wq/AQUfge6HvEfZ+0dSCqVOrVsjlcqi6
      SSgxytRw7GjbSDKF1AP++OoGf+XCMO3EMjNxz5F7FLeH/NandDSdWDTCoPvorrUgSnQKW1x7
      VMJHHRpeLs/1HSmjWqvTqhbIV1rgCrB4dvrIICgIIm7q/PRn7xGaXEJyeXh3aeaYrAputcSn
      n9WZHesnkUjgfmqdIAgCCh0+vPkAs97C8nj4rR9cBl4DL5BpmlhGk1S2gmwX6CEoLF1cIeR1
      93yfV6ivH8HlY3pijIRNPEk8HiMajWIaerd58wTLxMJkP3Vg7+EB4pPzzA5FUGTZfu/UHSQq
      tBmdX2Eo3h2TovjCDA3E8UiHSSE9XyRnWTRLaartHh4Pd5hLF+dxKUp3iMNjJoZiGIEhzowO
      dIcFSC7i/QP0BT2Hvv8eL9+zTBPB6rCzX0Cx2WtAkDm7vEIs6EHu0TaeSD9uWWJyaorBSPc+
      QV9fjFisD+tZbWNaWFhkDlKYPbpsdHSWs+OJw7ax8yQpXuIuk6G5BYb7v1D2Vx4MN3FmAX90
      ENHtJSgf2qtH5Dc1UrtJqs0OSmiQ2NJsVxkefxiPN4MkeQh4bVxtlsVn167S8CZw1w6Ame57
      vP385m/8Bk3NIhgKYVpW12ZKtZBma79Ax5R5+603uhtddNMX9tOSRfwe+3eiJdcfcH3tgEvj
      IYodi77j4UKCzPm3vs9QuYY3EETVDFzHXLtmp87m5ha62mHk3CXbCNlYIs7BbhW/13fM8/KY
      xgF37txDj0yi5ovMjna/xmpo8iy/54+By0PQbdc2BulUklK9jeWJEX8cX/M0iidIwO9CkNwE
      ewT3Xb9ynarsJyi2MKxZpOPDi6eP7/7wN6m1NYKhMIZpdSl+vZRjK5lF1eHCm291K72gEIuE
      qIgCft8XD/2VzwB3r3/CbibHjY//jB//6ft0ji/qZA9LF9/i3bffpFW13wTJ7W2wsZdBb+R4
      dNzT8JhEYoioG0ypxxlF1S3e++Qhmc3b/OQ//Jh76W4f/ODkOS5fvkzCa9DSbEbndp7NrSS7
      uSobO/YbQ/5ghNnBKBWtx+hjqnz4wYcUSkX+5Kd/yIfXbnfdIgfiXL58mbfODJKv2WxQATdu
      rVKuFjg42KXRsdm0c/mJj0zgU6vIPd6muX73Go+Sae5f+QU//tkvqbaPlSMpzC+/yeXLl9Fq
      OdsyatlNHiazdBp5VnfLtvfE4/3E/Qqq0OOtno0U73187zB56j/8mNs25cRHZ7l8+V3GIgI1
      u30Ntcqj9U1ShRobO1+EQrzyGSAaDFJSQoRCfWiq0G0W6G3u3LlDrakS7BuxL6N/lP5AhkcH
      LRbf7Y4WBYG+WARaBn3uHqHM7jBhX5ZQyMXogErdZiMrvb3K5n4RQ3Ax7baZadxRhgfiPMqn
      GJo7a1tNMBwmGFWRZIX48eQfAEEiGgwQCIUIxwYRze4OrtfzXLm9hqVpjJwft63n3MwYV1a3
      UL2D+G2iY5F9BDwe/KN+/NFY93UgFAxSU7x4tDDRjk0woqHx4N4tSvUOvr4h2zL8faMMh1Ns
      pOosvtMdLQqQSEQwazqRmNc2jAVXgLBXIRLxMTzQoNXu9lrl99ZZS2YxLYllr83vVQKMDQ/w
      MLNLfOILK+KVK8D4wgrBUgWr/02CAT+u45lLCHg9buTQIBMj9seryC4vk+NjtDQL0dCB7oyw
      B+tJ3rr83WMek6dwx/numyJNzWLkzEXc7u44Hpfbg9cfZmJqEo/tekUk3D/ChKthG68CcJDc
      RIrMMJkI2L8LWZRYeestKtUGly9fJmgTTySIMl6vl9j0GQZ7xND7wlGmRjqYip/Dt5Ifk7eR
      Zats8cNLk4ii/Q7t0PQCnnIZczjBcjCA63ikrSDg8XgIe+JMjtkrgCi7GRsbo6GaSKYBdD+X
      uw+3eOPy91BEwT5HwhXl8tvnaXR03p6c/zxW6WkUlxuPN8j49BR+l916RSQUH2JcrOF5ymR8
      5cFwmw9u8d5HV6hk00RHZwnYjKwmAo3cNg/2W0zb2KqZ7XuUxX7OTo3gdStHbXetwd1796mW
      ShTrTUq1tn0+QCvDH/3Re2zv7tN29zGe6LZnDxfsbT67eZ/hsfHuILR2gU8e5Li4fI5wwId0
      TNlSWw/YSxcoFEvUqlW8IZt8AFPnxod/xpVHe+ylspw/Z7NewQILdh7cpOWOkwh3Ly6vfPwx
      syuXGIiGUWTpyMKwVc5wZ32XajZDs9Wg3SMfILVxn5/8+a9oFtJ4hmaI2IyslgXtcopb26XD
      vZpjVA8ekmyGWZwbw+dxHW0bvc2D+/eolkrka01KlSYDiVh3PkC7wHs/+zkPtjPULQ9TQ90z
      lmVaCGjc/OwWseFxfK5j/Uit8smdJCsr54mGAp+3zStfAzSbKkOJGIGwH+24/Q9g6mxvrGP5
      4pyZtB9lPB4vmb1NNjY2qbaOTY+Kn8WlCyycncYjCRitMns5mwAyo40SSpCIBtB65AyUs0kO
      yhpnzszh6ZqpAMWLWc+ysb7Bfq7bTh2ZmufC8iKxoBfL0Ng/OKArtMWyUAUXiWgfbsXew2N2
      6qxt7hIbm2Eo2h0tChBxw4O1DTZ2UujHdu28kQEuXVhhamzw8e86oHbcvgfabZWBWB+hvhAd
      u4A602B3ax1VDnNuetRWDsXjp7S/wcbGBuXGsc1B2cP84grn5+fwyQJWu8pe1madYHSQg3Hi
      oQBmD49VrZBiN9dg9swZArYmnwuxXeLR+ga76S/Wkq/cBIoNDjG9uIJlgs8mswlRJh6LUKw3
      yFNhbKDbvahqKomhCSbHoii2Cd4WD3cOePs73+Gjjz6kUm8w+sMfHL1FDrB48S0GQjKuHh6c
      YDSOUslQLBYZGRmhK+7O6CD740xOTSJJ9iZQOrWDLzGFr/qQj9fWiMQHjzaCIDI0eZahwThm
      j+YRFR+xkJt6uYQnMkjUJkS8oYnMTk/ik8QeXqAce02Fd2fjfPTpp9x0RXlzJn7klnC8n+9N
      zSMBPr+NqSWIxOJ9ZMtN8sUSk8PxrlsMrU1kYILJyX4Ul/0zWd3c5Y3vvMP1qx+TuXuTicEf
      Hb1B8jF7/hKDEReyyz7F0x/uw1PYp1Qs0j88hvv4AGVq4AkzNTWJLH3xXF/5DEAjx/V7W9Rq
      NfuML71JsePmwsoSstUdPmxZJsFoP7RyrK9vULULU0ZgIh5kK7mDyx8nErJZKIsiD25co1St
      0ezYR50md3Ocv3SJoT4P6nFZLQtT9DHcp7Cxvk4qax9SnegfpJzdJ10xmBjqO7Jh84Ti7iPW
      d3NU603bMrRGDsKTXDg7SrPTPVuZpsnE1Ch7G+usb+/ZP1d/nLBRZi+TIxofJBKw6VitMp/d
      fUStXkO1nZ1VcjVYuXgRNzbeKMvCHUjgMcusr69TqttHjE4PRtnYSSK6wsQj3aYnosjDW9cp
      VGo02vZl7O/nmDm/zHh/gI52TFbLwsTNSL+fzfV1dg9eoxkgOjLDTNW+oQEQJWr5fZI7Fvlq
      90O2OnXKTePQpnvG+UqBSBS1aTI2Osz0WLetiuTj4oX5Z8qqmE3WN3copdIsDc0dE8SgWK4i
      yRKaavSURfH4CHrrKJExBkfGCHhkMk8nsQki0/OLth3781tkmUxyE1exg54433W9Vi1jIPZM
      Qj8sRKIvFsGSXIzNTjMYC9FqHXX9BgfGOePuET7+WNZWOUNyx02m1GLp+HWtQamh9tzAfIIv
      HKFe0xgeGWZq1MbMlbxcuLDwzAOWZavD5naSTnaf6dj0sasWxXL58DQ6TT/SNq98Bihl9/nF
      ldu08klKbZtRRvZx+fLbhKMJvvtG1yNGcAeRtCrhoWlmEy4ObOPSLVY3dhmbGGNkwN7lh9Xm
      +se/IpPNsZW291efufAdxmJhLn3nXcLHzwQSJGI+kaoV4PzZacpF+7TKg90tpGA/o6PDeI8v
      1B7Lmlq7xa1kge317ohSACU4wuU3zjIwt8LiWHfSfCgc5aBQ5fz58yhmvXtvBaCZY7tkMTY2
      apt1BlArZvjTDz/DLO+RbdiUIbl4+913iISjfP+dS93XFT9es4Y7Psm5YT+psk0CEHB/bZux
      iXFGBuI9Tspoc//qr9jJlNhK2SfvTC5cZGawj8W3LpPwHze1BGJBDyXVxfmFc1SLX5TxymeA
      UqWOLOqUKjU8x8P4gMOYEy9Rt73tZ7Ur3Lv/ANVXIe42GVucsi0jrBjcvnsfjy/MxQUbz0qr
      QsuSqVQquFz2R2sIkkw42uPYDctgZ3ON1fUaUiuBO2Tvsg35fdzcXKWeDzA1N080cGzdYxpU
      mx10qU7J7JFkIgj4AiHsVypQye2xurqKLAq0dZEpuzAGVwCq97h/v0O4f4wZG+9atVpDFA1K
      lSreuJ0LU0B2eYi6ehxnotW5/+ABGatALWAxeG7Y9raYB27duY/XG2BlYa776JN2nZYloVXK
      +HpslgmiTCjS60gUi72tNVZX00haFdnzxaDxyhVgoD+OqgRJxBMMfIU3yYjeCN/70V/GlDzd
      x3Y8QYC5xSU2tg+wek3H7gjT01OEI1FGevi0ny2IzOTC28RmDIK+Hh0CiA5PM95cp6lhP9oJ
      EgMjE4QFD4kB+w7zPCL9Y/y13/s9gkG7TcHHKEFWzk+zX6jbZ1ABsVicxTNuwvE4Q7Hev6kn
      riBvfe+3UXHZHlXzhJnFFdY2dzGlHu3nCjEyMY0/GOH/b+/MmtpIrzD8dLckaCShjVWsApvF
      xmsmiSc1Sarmbm7ys1NlT5gxq9gFYhGS0L73mgsms6AWZkCtdsY8t4iur9T9tc4533veE520
      rjbdiiAytfiGf02r+L2/fZE6HgIFRyYI9RmkLlPULE747oKn39v54YdrLdCHD5yW6mRTHVwh
      3F5iE0NUChkuc9Zyik8iuW99+AFOD+N82E7gbua4shK7CSLRqWlo1Ti7sO4rvgu3PvwAtUvW
      1tY5L+ukMtYyBl9kjBGfRDp9SflmCfOOuPoGbn34AVY/fE8yV6KUvUC3Egi6ZGJTY1SLWVIW
      5eU7IbraHn74DDZAo3xFsW7g9w1aWt51i/DQKOE+AUPs8CujK5xfZnHLfkKDnYKLhyMP+Jkb
      DVHWBETLtM4kl0mhCy5CncKtbuCRiYxP41UrHUu2rWqBXFVlwOvH28H5rRuEQkMM+9yonbRA
      hsr5RRqP7CMU6CBluSeOh0ByYJQFj8zxRQ5N13FLdixJYGRkGHdDZ6TPOuFDdLO4/IyL5DGt
      lgoWznDdIBAOE2maiJKLkZsGrj+tdXRqHvnqkmzDxtlqLi9Bv5/BQBBvsD3+B+jzRVh6InOU
      TKFqhqX9SjcYGx9GqqpE3B20QKKLJ0vLXJ4e02oqYGG/cl+c2wCGzkF8g0pLR6tmaQ29Yum2
      MOZBmGzuHfHVu6+RLHQvxdQxh5cFUBqc1wS+iy3YtA64ODnE8MeYGvbhaTuur7C6vosgCCRT
      l/z9H9/atg5qGQ6uFL55PY/kuvHmNU2Od9fJ13VcjQyX3hWWLCtW3WFje5837/6GSxTb8qLK
      1Rl7yQympnFerPPdt+1y+IfgaAjkkWUk4VpPoiittt7VrqDW2NxYQ23U2diKs3PYLlMW3R76
      PS5M89pnVOtw3P5QzhNxUldlzo52iO/sUr7pLicIyAMD1yODDJ2m0sEq8IE0iml+2DunlTsj
      Ho9zauGD5O6XcUtgAGqriS3fiNYkvrmG2mywvhUnfnDS1mstSm76+9xgcu0QYVXSfQCfxYik
      ZrVIOl9hdCxKvx1vGtMkl82iaXUKLTdLsWtZ9c0xPLraIpNJ4/ZGfu4Z7Tb1SgFFUThL5Zld
      WMLnESzGARmUcllKLYGZiU7OzA/EaJHJNajlz+iLTBMdGrQckaTUK6SyBYZHowzYlAfkMxkM
      s0W2YrI4P4UotH8nhqaQTacR5CAj4U8k+L8DR0Ogk8NdCv+rLkh9DI3atRdNNrbXcDFA2VB/
      3gD/o5w94+hXfqBDng5W7V0glTzgJFkgPO5jP1Xhzcyvjv6VKhs7h+g/vQalARuT4FqGtYMz
      3BUFs2QQHXr5y99Mk7PEzi8n76KL0Mg9SsN3ZH17nX7BQwmIzUz8pqJXy6fYT/5iUxMa+6Mk
      waLEzNNnRHIp3v+4geAaQDWefvr/7oXA8/kYVVeIWb39NHJweJJX4WE+vv832ZpOf+QeteY7
      MjEzT0PMMxnpRxi8cTM9Pl68eMHF4TabJ2ncTQGYsWchvnHmAgV8C88wb4Z8gsDk3DLhYob3
      q2sgelDm7AsUXi48IW/ITItam+W8NzzO62CEzdX3nBcVJH93R+46XgXa2T+irkssjLiotXRL
      zfmDEQSGp55gXev4idIx+5kW81OjFKv2VV/6fWFWlsOdP6Cr7B0lkIKzCM171rzvguBi/tnL
      Wz9ynEiQqRp8/VSm1NAZ6u7L92fC0Vlu+Uagck4iXSY0Ok2lZj0m6744vgFi07OEayXyNZ2o
      3KEO3AsCE7xdlqiUc4xZDHroGZKLhcUXFGsVWgMWor0eMjExQ7/XR6amyt3aawAABBdJREFU
      MX9TstFL/KM8XzYp56/wR+53Ot4JxzdAIBKkrmpMhgLWrWy9QvQS8HvweKcZa7Nq6CGCSDDo
      R0UgGunuz/3vxRcMUGm2mAj628V/vUSUCXg9SJ5JRke6m585fhK8s/4RxSVzvr9GpnK/4/au
      UEmyeljC1bjk49H9JQgPRldZ/XED2Svz/X9WnVsHcLy7QVl3kzte57Rg7T7RE2opvt/L0qcV
      +fGmN+gDcbQKlDiIkzxP49XcqJU6Y/aU3z9JKXPKwfER5azCBSJK6NZswT6UKmtbO2SzOTwn
      px0bc2zHNDk93OYomULwa7iVOnKH8VR2U81fsHe4Tzlb58zVT0ue6ur1Ha0CxRZWGA4NEk/m
      EYYnificyQECI1O8HRpBMD+CJPJk8taUzD48Pl69fkvI20++rjAbs2qI7wGCwNST50TCIbYS
      aRiQGQ86kwP4wlHeBoeQhI+Yosj8VHfPRRwPgfb2T5h/9pxBsUym5ODPbDlJwRVlZTbMXrLD
      FJleYKgcpUqsvHpD9nzfuXUAyZMk47FFxr1NklbTbHpFLUXWiPB8fpzDk4uuXtrxDbC0NM/R
      9iZVIcRY0B4B2p0YnGWYFJsnRZZjDlZfRA8LU2E2Pv7A+MztLZp2Mzs3RzqxS7rpZXa4ewK0
      341vgnF3gc3DSxZif5QQyDQoFXI0VYmpySgIEoJpYeDUA1r1MsVKg9HJ60Onvk7TmO1GV8jk
      CkjeMFFvGMF9jyaUbmCalIs5GorJ5GQUBBHBMKBTw4qNKI0qhXKNoej1g99tqYyjZVBd19B1
      43p2r+S+tenZTkzjeg2moWGY0Od1aiWgqRpgoukGUid9fA8wdA1d068dm0XJsXuDaaBpGqZh
      YJgmbrm7lRLnQiBTJ3F0TkRW+WH3lJP9bQodBsvZTfrsBOQA+zubFFPH7KesLU1sRy1xfNlA
      K6dIXOTY3I47sw4gcXBMyC+wtnvMxeE2maoz9yafPqMlejna36KUOWP3tLv5mYMbwKTebGLI
      w/zz3Z+I+PvQLJvi7UdptVA0nddffc389BiKTTLkT6Ir1BSVoelF/vJ62XKcU6+oNxsYniDf
      vPszo6EBlA5ueXajKS2aqs6LN3/laWwCTe1uadi5EEhys7I4yfr6Nh4JhIEoYwFnkuDY4hIb
      m3EKUh+KqvPi5U1fmR7hjbIQumIzfoCgt5hbul2rYxsCvFx5yubaJh6XiOEZ5tWQM0nw+OwC
      ha0tEjkPqqLyfOVVV6/veD+AaZqY0D7Zuwf8WnNumiamaSKIYs/T8PZ+gOtbYjnpxEZu9gN8
      LvcGrt3u7Lg3jmuBBEFwoO7TjiAIPX/gOvE5rePzWAkdrVsefF1brvrII/8nPG6AR75oHjfA
      I180jxvgkS+axw3wyBfNfwG85LNeMYIifQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ratios' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ScoreVSQuality' width='192'>
      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
      /x8Dtwnqhgub4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='UniversityClusters' width='192'>
      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
      GhoaxP8D4LbrtWFdE40AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='WURDashboard' width='192'>
      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
      DfU2s8K8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WURStory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WorldRanking' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
